<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一剑九州寒的个人小站</title>
  <subtitle>淡泊以明志，宁静以致远。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.alanice.cn/"/>
  <updated>2017-09-08T02:05:39.000Z</updated>
  <id>http://blog.alanice.cn/</id>
  
  <author>
    <name>Alan Zou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Maven安装和配置</title>
    <link href="http://blog.alanice.cn/2017/09/08/f2c956c6-364b-4585-9d66-c6fcdc46d36d/"/>
    <id>http://blog.alanice.cn/2017/09/08/f2c956c6-364b-4585-9d66-c6fcdc46d36d/</id>
    <published>2017-09-08T02:05:39.000Z</published>
    <updated>2017-09-08T02:05:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载Maven"><a href="#下载Maven" class="headerlink" title="下载Maven"></a>下载Maven</h2><p><a href="http://maven.apache.org/download.cgi" target="_blank" rel="external">Maven &#x2013; Download Apache Maven</a></p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>Windows下配置环境变量即可，Ubuntu下在<code>~/.bashrc</code>里加入如下两行语句即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">export M2_HOME=/home/alan/Documents/Applications/apache-maven-3.5.0</div><div class="line">export PATH=$M2_HOME/bin:$PATH</div></pre></td></tr></table></figure><p>在命令行运行<code>mvn -v</code>，若显示Maven版本信息则说明环境变量配置成功。</p><h2 id="配置settings-xml"><a href="#配置settings-xml" class="headerlink" title="配置settings.xml"></a>配置<code>settings.xml</code></h2><p>打开用户目录下的<code>~/.m2/settings.xml</code>（没有的话从安装目录的conf文件夹下复制一个过来）。</p><h3 id="配置本地仓库地址"><a href="#配置本地仓库地址" class="headerlink" title="配置本地仓库地址"></a>配置本地仓库地址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;localRepository&gt;/home/alan/Documents/Frameworks/Maven-repository&lt;/localRepository&gt;</div></pre></td></tr></table></figure><h3 id="配置Maven国内镜像"><a href="#配置Maven国内镜像" class="headerlink" title="配置Maven国内镜像"></a>配置Maven国内镜像</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">&lt;mirror&gt;</div><div class="line">  &lt;id&gt;alimaven&lt;/id&gt;</div><div class="line">  &lt;name&gt;aliyun maven&lt;/name&gt;</div><div class="line">  &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;</div><div class="line">  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</div><div class="line">&lt;/mirror&gt;</div><div class="line">&lt;mirror&gt;</div><div class="line">  &lt;id&gt;central&lt;/id&gt;</div><div class="line">  &lt;name&gt;Maven Repository Switchboard&lt;/name&gt;</div><div class="line">  &lt;url&gt;http://repo1.maven.org/maven2/&lt;/url&gt;</div><div class="line">  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</div><div class="line">&lt;/mirror&gt;</div><div class="line">&lt;mirror&gt;</div><div class="line">  &lt;id&gt;repo2&lt;/id&gt;</div><div class="line">  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</div><div class="line">  &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</div><div class="line">  &lt;url&gt;http://repo2.maven.org/maven2/&lt;/url&gt;</div><div class="line">&lt;/mirror&gt;</div><div class="line">&lt;mirror&gt;</div><div class="line">  &lt;id&gt;ibiblio&lt;/id&gt;</div><div class="line">  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</div><div class="line">  &lt;name&gt;Human Readable Name for this Mirror.&lt;/name&gt;</div><div class="line">  &lt;url&gt;http://mirrors.ibiblio.org/pub/mirrors/maven2/&lt;/url&gt;</div><div class="line">&lt;/mirror&gt;</div><div class="line">&lt;mirror&gt;</div><div class="line">  &lt;id&gt;jboss-public-repository-group&lt;/id&gt;</div><div class="line">  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</div><div class="line">  &lt;name&gt;JBoss Public Repository Group&lt;/name&gt;</div><div class="line">  &lt;url&gt;http://repository.jboss.org/nexus/content/groups/public&lt;/url&gt;</div><div class="line">&lt;/mirror&gt;</div><div class="line">&lt;!-- 中央仓库在中国的镜像 --&gt;</div><div class="line">&lt;mirror&gt;</div><div class="line">  &lt;id&gt;maven.net.cn&lt;/id&gt;</div><div class="line">  &lt;name&gt;oneof the central mirrors in china&lt;/name&gt;</div><div class="line">  &lt;url&gt;http://maven.net.cn/content/groups/public/&lt;/url&gt;</div><div class="line">  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</div><div class="line">&lt;/mirror&gt;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载Maven&quot;&gt;&lt;a href=&quot;#下载Maven&quot; class=&quot;headerlink&quot; title=&quot;下载Maven&quot;&gt;&lt;/a&gt;下载Maven&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://maven.apache.org/download.cgi&quot; tar
    
    </summary>
    
      <category term="Java" scheme="http://blog.alanice.cn/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode - Regular Expression Matching And Wildcard Matching</title>
    <link href="http://blog.alanice.cn/2017/08/05/63b658f9-a198-43aa-98e6-bd370c06892c/"/>
    <id>http://blog.alanice.cn/2017/08/05/63b658f9-a198-43aa-98e6-bd370c06892c/</id>
    <published>2017-08-05T12:00:14.000Z</published>
    <updated>2017-08-05T12:00:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近刷LeetCode遇到关于正则匹配的编程题，在这里记录下解题思路。</p><h2 id="Regular-Expression-Matching"><a href="#Regular-Expression-Matching" class="headerlink" title="Regular Expression Matching"></a>Regular Expression Matching</h2><h3 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h3><p><a href="https://leetcode.com/problems/regular-expression-matching/description/" target="_blank" rel="external">Regular Expression Matching - LeetCode</a></p><h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Implement regular expression matching with support for ‘.’ and ‘*’.</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&apos;.&apos; Matches any single character.</div><div class="line">&apos;*&apos; Matches zero or more of the preceding element.</div><div class="line"></div><div class="line">The matching should cover the entire input string (not partial).</div><div class="line"></div><div class="line">The function prototype should be:</div><div class="line">bool isMatch(const char *s, const char *p)</div><div class="line"></div><div class="line">Some examples:</div><div class="line">isMatch(&quot;aa&quot;,&quot;a&quot;) ? false</div><div class="line">isMatch(&quot;aa&quot;,&quot;aa&quot;) ? true</div><div class="line">isMatch(&quot;aaa&quot;,&quot;aa&quot;) ? false</div><div class="line">isMatch(&quot;aa&quot;, &quot;a*&quot;) ? true</div><div class="line">isMatch(&quot;aa&quot;, &quot;.*&quot;) ? true</div><div class="line">isMatch(&quot;ab&quot;, &quot;.*&quot;) ? true</div><div class="line">isMatch(&quot;aab&quot;, &quot;c*a*b&quot;) ? true</div></pre></td></tr></table></figure><h3 id="Recursive-Solution"><a href="#Recursive-Solution" class="headerlink" title="Recursive Solution"></a>Recursive Solution</h3><h4 id="Discusss"><a href="#Discusss" class="headerlink" title="Discusss"></a>Discusss</h4><p>当模式中的第二个字符不是“*”时：</p><ol><li>如果字符串第一个字符和模式中的第一个字符相匹配，那么字符串和模式都后移一个字符，然后匹配剩余的。</li><li>如果字符串第一个字符和模式中的第一个字符相不匹配，直接返回false。</li></ol><p>而当模式中的第二个字符是“*”时：</p><ol><li>如果字符串第一个字符跟模式第一个字符不匹配，则模式后移2个字符，继续匹配。</li><li>如果字符串第一个字符跟模式第一个字符匹配，可以有2种匹配方式：<br>1) 模式后移2字符，相当于x*被忽略;<br>2) 字符串后移1字符，模式不变，即继续匹配字符下一位，因为*可以匹配多位;</li></ol><h4 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMatch</span><span class="params">(String s, String p)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (s.equals(<span class="string">""</span>) &amp;&amp; p.equals(<span class="string">""</span>)) <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">if</span> (!s.equals(<span class="string">""</span>) &amp;&amp; p.equals(<span class="string">""</span>)) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">if</span> (p.length() &gt; <span class="number">1</span> &amp;&amp; p.charAt(<span class="number">1</span>) == <span class="string">'*'</span>) &#123;</div><div class="line">            <span class="keyword">return</span> isMatch(s, p.substring(<span class="number">2</span>)) ||</div><div class="line">                    (s.length() != <span class="number">0</span> &amp;&amp; (p.charAt(<span class="number">0</span>) == <span class="string">'.'</span> || s.charAt(<span class="number">0</span>) == p.charAt(<span class="number">0</span>)) &amp;&amp; isMatch(s.substring(<span class="number">1</span>), p));</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (s.length() != <span class="number">0</span> &amp;&amp; p.length() != <span class="number">0</span> &amp;&amp; (p.charAt(<span class="number">0</span>) == <span class="string">'.'</span> || s.charAt(<span class="number">0</span>) == p.charAt(<span class="number">0</span>)))</div><div class="line">            <span class="keyword">return</span> isMatch(s.substring(<span class="number">1</span>), p.substring(<span class="number">1</span>));</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Dynamic-Planning-Solution"><a href="#Dynamic-Planning-Solution" class="headerlink" title="Dynamic Planning Solution"></a>Dynamic Planning Solution</h3><h4 id="Discusss-1"><a href="#Discusss-1" class="headerlink" title="Discusss"></a>Discusss</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">1. If p.charAt(j) == s.charAt(i) :  dp[i][j] = dp[i-1][j-1];</div><div class="line">2. If p.charAt(j) == &apos;.&apos; : dp[i][j] = dp[i-1][j-1];</div><div class="line">3. If p.charAt(j) == &apos;*&apos;: </div><div class="line">   here are two sub conditions:</div><div class="line">       1   if p.charAt(j-1) != s.charAt(i) : dp[i][j] = dp[i][j-2]  //in this case, a* only counts as empty</div><div class="line">       2   if p.charAt(i-1) == s.charAt(i) or p.charAt(i-1) == &apos;.&apos;:</div><div class="line">                      dp[i][j] = dp[i-1][j]    // in this case, a* counts as multiple a </div><div class="line">                   or dp[i][j] = dp[i][j-2]    // in this case, a* counts as empty</div></pre></td></tr></table></figure><h4 id="Code-1"><a href="#Code-1" class="headerlink" title="Code"></a>Code</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMatch</span><span class="params">(String s, String p)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[s.length()+<span class="number">1</span>][p.length()+<span class="number">1</span>];</div><div class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; p.length(); i++)</div><div class="line">            <span class="keyword">if</span> (p.charAt(i) == <span class="string">'*'</span> &amp;&amp; dp[<span class="number">0</span>][i-<span class="number">1</span>]) dp[<span class="number">0</span>][i+<span class="number">1</span>] = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; s.length(); i++) &#123;</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; p.length(); j++) &#123;</div><div class="line">                <span class="keyword">if</span> (p.charAt(j) == <span class="string">'.'</span>) dp[i+<span class="number">1</span>][j+<span class="number">1</span>] = dp[i][j];</div><div class="line">                <span class="keyword">if</span> (p.charAt(j) == s.charAt(i)) dp[i+<span class="number">1</span>][j+<span class="number">1</span>] = dp[i][j];</div><div class="line">                <span class="keyword">if</span> (p.charAt(j) == <span class="string">'*'</span>) &#123;</div><div class="line">                    <span class="keyword">if</span> (p.charAt(j-<span class="number">1</span>) != s.charAt(i) &amp;&amp; p.charAt(j-<span class="number">1</span>) != <span class="string">'.'</span>) </div><div class="line">                        dp[i+<span class="number">1</span>][j+<span class="number">1</span>] = dp[i+<span class="number">1</span>][j-<span class="number">1</span>];</div><div class="line">                    <span class="keyword">else</span> </div><div class="line">                         dp[i+<span class="number">1</span>][j+<span class="number">1</span>] = (dp[i][j+<span class="number">1</span>] || dp[i+<span class="number">1</span>][j-<span class="number">1</span>]);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> dp[s.length()][p.length()];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Wildcard-Matching"><a href="#Wildcard-Matching" class="headerlink" title="Wildcard Matching"></a>Wildcard Matching</h2><h3 id="Link-1"><a href="#Link-1" class="headerlink" title="Link"></a>Link</h3><p><a href="https://leetcode.com/problems/wildcard-matching/description/" target="_blank" rel="external">Wildcard Matching - LeetCode</a></p><h3 id="Description-1"><a href="#Description-1" class="headerlink" title="Description"></a>Description</h3><p>Implement wildcard pattern matching with support for ‘?’ and ‘*’.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&apos;?&apos; Matches any single character.</div><div class="line">&apos;*&apos; Matches any sequence of characters (including the empty sequence).</div><div class="line"></div><div class="line">The matching should cover the entire input string (not partial).</div><div class="line"></div><div class="line">The function prototype should be:</div><div class="line">bool isMatch(const char *s, const char *p)</div><div class="line"></div><div class="line">Some examples:</div><div class="line">isMatch(&quot;aa&quot;,&quot;a&quot;) ? false</div><div class="line">isMatch(&quot;aa&quot;,&quot;aa&quot;) ? true</div><div class="line">isMatch(&quot;aaa&quot;,&quot;aa&quot;) ? false</div><div class="line">isMatch(&quot;aa&quot;, &quot;*&quot;) ? true</div><div class="line">isMatch(&quot;aa&quot;, &quot;a*&quot;) ? true</div><div class="line">isMatch(&quot;ab&quot;, &quot;?*&quot;) ? true</div><div class="line">isMatch(&quot;aab&quot;, &quot;c*a*b&quot;) ? false</div></pre></td></tr></table></figure><h3 id="Recursive-Solution-1"><a href="#Recursive-Solution-1" class="headerlink" title="Recursive Solution"></a>Recursive Solution</h3><h4 id="Discuss"><a href="#Discuss" class="headerlink" title="Discuss"></a>Discuss</h4><p>当模式中的第一个字符不是“*”时：</p><ol><li>如果字符串第一个字符和模式中的第一个字符相匹配，那么字符串和模式都后移一个字符，然后匹配剩余的。</li><li>如果字符串第一个字符和模式中的第一个字符相不匹配，直接返回false。</li></ol><p>而当模式中的第一个字符是“*”时：</p><ol><li>模式后移1字符，相当于*被忽略;</li><li>字符串后移1字符，模式不变，即继续匹配字符下一位，因为*可以匹配多位;</li></ol><h4 id="Code-2"><a href="#Code-2" class="headerlink" title="Code"></a>Code</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Deprecated</span></div><div class="line"><span class="comment">//(TimeLimitExceededException)</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMatch</span><span class="params">(String s, String p)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (s.length() == <span class="number">0</span> &amp;&amp; p.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">if</span> (s.length() != <span class="number">0</span> &amp;&amp; p.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        <span class="keyword">if</span> (s.length() &gt; <span class="number">0</span> &amp;&amp; (p.charAt(<span class="number">0</span>) == <span class="string">'?'</span> || s.charAt(<span class="number">0</span>) == p.charAt(<span class="number">0</span>))) <span class="keyword">return</span> isMatch(s.substring(<span class="number">1</span>), p.substring(<span class="number">1</span>));</div><div class="line">        <span class="keyword">if</span> (p.charAt(<span class="number">0</span>) == <span class="string">'*'</span>) <span class="keyword">return</span> isMatch(s, p.substring(<span class="number">1</span>)) || (s.length() &gt; <span class="number">0</span> &amp;&amp; isMatch(s.substring(<span class="number">1</span>), p));</div><div class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Dynamic-Planning-Solution-1"><a href="#Dynamic-Planning-Solution-1" class="headerlink" title="Dynamic Planning Solution"></a>Dynamic Planning Solution</h3><h4 id="Discuss-1"><a href="#Discuss-1" class="headerlink" title="Discuss"></a>Discuss</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1. If p.charAt(j) == s.charAt(i) :  dp[i][j] = dp[i-1][j-1];</div><div class="line">2. If p.charAt(j) == &apos;.&apos; : dp[i][j] = dp[i-1][j-1];</div><div class="line">3. If p.charAt(j) == &apos;*&apos;: </div><div class="line">   here are two sub conditions:</div><div class="line">          dp[i][j] = dp[i-1][j]    // in this case, * counts as multiple </div><div class="line">       or dp[i][j] = dp[i][j-1]    // in this case, * counts as empty</div></pre></td></tr></table></figure><h4 id="Code-3"><a href="#Code-3" class="headerlink" title="Code"></a>Code</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMatch</span><span class="params">(String s, String p)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[s.length() + <span class="number">1</span>][p.length() + <span class="number">1</span>];</div><div class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; p.length(); j++)</div><div class="line">            <span class="keyword">if</span> (p.charAt(j) == <span class="string">'*'</span> &amp;&amp; dp[<span class="number">0</span>][j]) dp[<span class="number">0</span>][j+<span class="number">1</span>] = <span class="keyword">true</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++)</div><div class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; p.length(); j++)</div><div class="line">                <span class="keyword">if</span> (p.charAt(j) == <span class="string">'?'</span> || s.charAt(i) == p.charAt(j)) dp[i+<span class="number">1</span>][j+<span class="number">1</span>] = dp[i][j];</div><div class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (p.charAt(j) == <span class="string">'*'</span>) dp[i+<span class="number">1</span>][j+<span class="number">1</span>] = dp[i][j+<span class="number">1</span>] || dp[i+<span class="number">1</span>][j];</div><div class="line">        <span class="keyword">return</span> dp[s.length()][p.length()];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近刷LeetCode遇到关于正则匹配的编程题，在这里记录下解题思路。&lt;/p&gt;&lt;h2 id=&quot;Regular-Expression-Matching&quot;&gt;&lt;a href=&quot;#Regular-Expression-Matching&quot; class=&quot;headerlink&quot; title=&quot;Regular Expression Matching&quot;&gt;&lt;/a&gt;Regular Expression Matching&lt;/h2&gt;&lt;h3 id=&quot;Link&quot;&gt;&lt;a href=&quot;#Link&quot; class=&quot;headerlink&quot; title=&quot;Link&quot;&gt;&lt;/a&gt;Link&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/regular-expression-matching/description/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Regular Expression Matching - LeetCode&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;Description&quot;&gt;&lt;a href=&quot;#Description&quot; class=&quot;headerlink&quot; title=&quot;Description&quot;&gt;&lt;/a&gt;Description&lt;/h3&gt;&lt;p&gt;Implement regular expression matching with support for ‘.’ and ‘*’.&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://blog.alanice.cn/categories/Algorithm/"/>
    
    
      <category term="LeetCode" scheme="http://blog.alanice.cn/tags/LeetCode/"/>
    
      <category term="正则" scheme="http://blog.alanice.cn/tags/%E6%AD%A3%E5%88%99/"/>
    
  </entry>
  
  <entry>
    <title>使用zxing生成和识别二维码</title>
    <link href="http://blog.alanice.cn/2017/08/03/15b16d90-13bb-4baa-b328-c77b2019226a/"/>
    <id>http://blog.alanice.cn/2017/08/03/15b16d90-13bb-4baa-b328-c77b2019226a/</id>
    <published>2017-08-03T03:25:20.000Z</published>
    <updated>2017-08-03T03:25:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>zxing包似乎没有提供相关的Jar包下载，那么我们首先来编译生成zxing的Jar包。</p><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><p><a href="https://github.com/zxing/zxing" target="_blank" rel="external"><i class="fa fa-github"></i>zxing</a></p><a id="more"></a><h3 id="新建Module"><a href="#新建Module" class="headerlink" title="新建Module"></a>新建Module</h3><p>在IDEA中新建Module，并把zxing的core源码拷贝进去，javase的源码也要拷贝进去</p><h3 id="编译Jar包"><a href="#编译Jar包" class="headerlink" title="编译Jar包"></a>编译Jar包</h3><p>打开Project Structure，选择Artifacts，选择相应的Path，勾选上Include In Project，如图所示：</p><p><img src="http://ww1.sinaimg.cn/large/7c80419fgy1fi6d9nyhtnj211y0lcwhb.jpg" alt=""></p><p>最后右键zxing这个Module，选择build即可在相应的Path下找到编译好的Jar包</p><h2 id="生成二维码"><a href="#生成二维码" class="headerlink" title="生成二维码"></a>生成二维码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">WriteQRcode</span><span class="params">(String content, File file)</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        MultiFormatWriter multiFormatWriter = <span class="keyword">new</span> MultiFormatWriter();</div><div class="line">        <span class="keyword">int</span> width = <span class="number">400</span>;</div><div class="line">        <span class="keyword">int</span> height = <span class="number">400</span>;</div><div class="line">        Map hints = <span class="keyword">new</span> HashMap();</div><div class="line">        hints.put(EncodeHintType.CHARACTER_SET, <span class="string">"UTF-8"</span>);</div><div class="line"></div><div class="line">        BitMatrix bitMatrix = multiFormatWriter.encode(content, BarcodeFormat.QR_CODE, width, height, hints);</div><div class="line"></div><div class="line">        Path path = file.toPath();</div><div class="line"></div><div class="line">        MatrixToImageWriter.writeToPath(bitMatrix, <span class="string">"jpg"</span>, path);</div><div class="line"></div><div class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="识别二维码"><a href="#识别二维码" class="headerlink" title="识别二维码"></a>识别二维码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ReadQRcode</span><span class="params">(File file)</span> </span>&#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        MultiFormatReader multiFormatReader = <span class="keyword">new</span> MultiFormatReader();</div><div class="line"></div><div class="line">        BufferedImage image = ImageIO.read(file);</div><div class="line"></div><div class="line">        LuminanceSource source = <span class="keyword">new</span> BufferedImageLuminanceSource(image);</div><div class="line"></div><div class="line">        Binarizer binarizer = <span class="keyword">new</span> HybridBinarizer(source);</div><div class="line"></div><div class="line">        BinaryBitmap binaryBitmap = <span class="keyword">new</span> BinaryBitmap(binarizer);</div><div class="line"></div><div class="line">        Map hints = <span class="keyword">new</span> HashMap();</div><div class="line">        hints.put(EncodeHintType.CHARACTER_SET, <span class="string">"UTF-8"</span>);</div><div class="line"></div><div class="line">        Result result = multiFormatReader.decode(binaryBitmap, hints);</div><div class="line"></div><div class="line">        System.out.println(<span class="string">"result: "</span> + result.toString());</div><div class="line">        System.out.println(<span class="string">"resultFormat: "</span> + result.getBarcodeFormat());</div><div class="line">        System.out.println(<span class="string">"resultText: "</span> + result.getText());</div><div class="line"></div><div class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125; <span class="keyword">catch</span> (NotFoundException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作&quot;&gt;&lt;/a&gt;准备工作&lt;/h2&gt;&lt;p&gt;zxing包似乎没有提供相关的Jar包下载，那么我们首先来编译生成zxing的Jar包。&lt;/p&gt;&lt;h3 id=&quot;下载源码&quot;&gt;&lt;a href=&quot;#下载源码&quot; class=&quot;headerlink&quot; title=&quot;下载源码&quot;&gt;&lt;/a&gt;下载源码&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/zxing/zxing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;i class=&quot;fa fa-github&quot;&gt;&lt;/i&gt;zxing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.alanice.cn/categories/Java/"/>
    
    
      <category term="二维码" scheme="http://blog.alanice.cn/tags/%E4%BA%8C%E7%BB%B4%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>让Hexo完美兼容LeTeX公式</title>
    <link href="http://blog.alanice.cn/2017/08/03/f1692270-16e2-44fb-88f3-6df2b4644f24/"/>
    <id>http://blog.alanice.cn/2017/08/03/f1692270-16e2-44fb-88f3-6df2b4644f24/</id>
    <published>2017-08-03T02:51:38.000Z</published>
    <updated>2017-08-03T02:51:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo中的Markdown对于大部分的公式都可以渲染成功，然而对于部分公式，由于Markdown语法和LeTeX语法有冲突，因此造成部分公式内容被marked先转义，导致公式渲染失败，经过权衡，决定放弃部分Markdown功能，确保LeTeX的正确。该冲突主要是由于对\和_的转义造成的。找到marked脚本文件</p><a id="more"></a><p><code>C:\Users\maple\AppData\Roaming\npm\node_modules\hexo\node_modules\marked\lib\marked.js</code>，先备份一下，然后修改</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">escape</span>: <span class="regexp">/^\\([\\`*&#123;&#125;\[\]()# +\-.!_&gt;])/</span>,</div></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">escape</span>: <span class="regexp">/^\\([`*\[\]()# +\-.!_&gt;])/</span>,</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span> <span class="string">'&lt;em&gt;'</span> + text + <span class="string">'&lt;/em&gt;'</span>;</div></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">return</span> <span class="string">'_'</span> + text + <span class="string">'_'</span>;</div></pre></td></tr></table></figure><p>经测试，我需要用到的所有公式都可以显示，且未发现Markdown有明显变化。说明此种方法切实可行。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo中的Markdown对于大部分的公式都可以渲染成功，然而对于部分公式，由于Markdown语法和LeTeX语法有冲突，因此造成部分公式内容被marked先转义，导致公式渲染失败，经过权衡，决定放弃部分Markdown功能，确保LeTeX的正确。该冲突主要是由于对\和_的转义造成的。找到marked脚本文件&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://blog.alanice.cn/categories/Hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>全错位排列</title>
    <link href="http://blog.alanice.cn/2017/07/30/b9ed53a1-9a52-48f8-9033-d6d8834d6095/"/>
    <id>http://blog.alanice.cn/2017/07/30/b9ed53a1-9a52-48f8-9033-d6d8834d6095/</id>
    <published>2017-07-30T14:03:08.000Z</published>
    <updated>2017-07-30T14:03:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里介绍全错位排列的两种解法，分别是利用递推公式和容斥原理</p><h2 id="递推公式"><a href="#递推公式" class="headerlink" title="递推公式"></a>递推公式</h2><p>假设排列是1,2,3···n个数，$D_n$表示n个数的全错位排列的方法数。$D_1$ = 0、$D_2$ = 1</p><p>那么对于第1个位置，假设由k去占。现在就有两种情况：</p><a id="more"></a><ol><li>1和k互换了位置，k占1的位置，1占k的位置：那么此时相当于1和k位置确定，只需要讨论$D_{n-2}$的排列数。</li><li>1没有占k的位置，而是占了其它的位置：那么此时相当于只确定了k的位置，需要讨论$D_{n-1}$的排列数。</li></ol><p>但是有（n-1）个数需要讨论，所以可以得到下面的递推式：</p><p>$D_n = (n-1)(D_{n-1} + D_{n-2})$</p><p>然后展开递推式就可以得到错位排序的通项公式了。</p><h2 id="容斥原理"><a href="#容斥原理" class="headerlink" title="容斥原理"></a>容斥原理</h2><p>记$N(a_1,a_2,···,a_n)$为n个数都没排错的方法数，那么对于以下情况，可以得到一些结论：<br>$a_1$排对，记$N(a_1) = (n-1)!$。因为a1已经排对了，那么还剩下(n-1)个位置让其它数排，所以有(n-1)!的排法。<br>$a_1$、$a_2$排对，记$N(a_1,a_2) = (n-2)!$<br>$a_1$、$a_2$、$a_3$排对，记$N(a_1,a_2,a_3) = (n-3)!$<br>·<br>·<br>·<br>$a_1$、$a_2$、$a_3$,$\dots$,$a_n$排对，记$N(a_1,a_2,a_3) = (n-n)! = 0! = 1$</p><p>推广一下，对于任意t个数，可得下面的等式：</p><p>$$<br>\sum N(t) = \sum N(a_{i_1},a_{i_2},\dots,a_{i_t})! = \binom{n}{t}(n-t)<br>$$</p><p>所以：</p><p>$$<br>D_n = n! - \sum N(1) + \sum N(2) + \dots + (-1)^n\sum N(n)<br>$$</p><p>$$<br>D_n = n!(1 - \frac{1}{1!} + \frac{1}{2!} + \dots + (-1)^n\frac{1}{n!})<br>$$</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里介绍全错位排列的两种解法，分别是利用递推公式和容斥原理&lt;/p&gt;&lt;h2 id=&quot;递推公式&quot;&gt;&lt;a href=&quot;#递推公式&quot; class=&quot;headerlink&quot; title=&quot;递推公式&quot;&gt;&lt;/a&gt;递推公式&lt;/h2&gt;&lt;p&gt;假设排列是1,2,3···n个数，$D_n$表示n个数的全错位排列的方法数。$D_1$ = 0、$D_2$ = 1&lt;/p&gt;&lt;p&gt;那么对于第1个位置，假设由k去占。现在就有两种情况：&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://blog.alanice.cn/categories/Algorithm/"/>
    
    
  </entry>
  
  <entry>
    <title>ClassLoader 介绍</title>
    <link href="http://blog.alanice.cn/2017/06/20/a2ce4e4f-23d5-4823-9947-3b3be9e5d8a6/"/>
    <id>http://blog.alanice.cn/2017/06/20/a2ce4e4f-23d5-4823-9947-3b3be9e5d8a6/</id>
    <published>2017-06-20T00:00:00.000Z</published>
    <updated>2017-06-20T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ClassLoader介绍"><a href="#ClassLoader介绍" class="headerlink" title="ClassLoader介绍"></a>ClassLoader介绍</h2><h3 id="什么是ClassLoader"><a href="#什么是ClassLoader" class="headerlink" title="什么是ClassLoader?"></a>什么是ClassLoader?</h3><p>一个Java程序，不是管是CS还是BS应用，都是由若干个.class文件组织而成的一个完整的Java应用程序，当程序在运行时，即会调用该程序的一个入口函数来调用系统的相关功能，而这些功能都被封装在不同的class文件当中，所以经常要从这个class文件中要调用另外一个class文件中的方法，如果另外一个文件不存在的，则会引发系统异常。而程序在启动的时候，并不会一次性加载程序所要用的所有class文件，而是根据程序的需要，通过Java的类加载机制（ClassLoader）来动态加载某个class文件到内存当中的，从而只有class文件被载入到了内存之后，才能被其它class所引用。所以ClassLoader就是用来动态加载class文件到内存当中用的。</p><a id="more"></a><h3 id="Java默认提供的三个ClassLoader"><a href="#Java默认提供的三个ClassLoader" class="headerlink" title="Java默认提供的三个ClassLoader"></a>Java默认提供的三个ClassLoader</h3><ol><li>BootStrap ClassLoader：称为启动类加载器，是Java类加载层次中最顶层的类加载器，负责加载JDK中的核心类库，如：rt.jar、resources.jar、charsets.jar等，</li><li>Extension ClassLoader：称为扩展类加载器，负责加载Java的扩展类库，默认加载JAVA_HOME/jre/lib/ext/目下的所有jar。</li><li>App ClassLoader：称为系统类加载器，负责加载应用程序classpath目录下的所有jar和class文件。</li></ol><p><strong>注意</strong>：除了Java默认提供的三个ClassLoader之外，用户还可以根据需要定义自已的ClassLoader，而这些自定义的ClassLoader都必须继承自java.lang.ClassLoader类，也包括Java提供的另外二个ClassLoader（Extension ClassLoader和App ClassLoader）在内，但是Bootstrap ClassLoader不继承自ClassLoader，因为它不是一个普通的Java类，底层由C++编写，已嵌入到了JVM内核当中，当JVM启动后，Bootstrap ClassLoader也随着启动，负责加载完核心类库后，并构造Extension ClassLoader和App ClassLoader类加载器。</p><h2 id="ClassLoader的加载原理"><a href="#ClassLoader的加载原理" class="headerlink" title="ClassLoader的加载原理"></a>ClassLoader的加载原理</h2><h3 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h3><p>ClassLoader使用的是双亲委托模型来搜索类的，每个ClassLoader实例都有一个父类加载器的引用（不是继承的关系，是一个包含的关系），虚拟机内置的类加载器（Bootstrap ClassLoader）本身没有父类加载器，但可以用作其它ClassLoader实例的的父类加载器。当一个ClassLoader实例需要加载某个类时，它会试图亲自搜索某个类之前，先把这个任务委托给它的父类加载器，这个过程是由上至下依次检查的，首先由最顶层的类加载器Bootstrap ClassLoader试图加载，如果没加载到，则把任务转交给Extension ClassLoader试图加载，如果也没加载到，则转交给App ClassLoader 进行加载，如果它也没有加载得到的话，则返回给委托的发起者，由它到指定的文件系统或网络等URL中加载该类。如果它们都没有加载到这个类时，则抛出ClassNotFoundException异常。否则将这个找到的类生成一个类的定义，并将它加载到内存当中，最后返回这个类在内存中的Class实例对象。</p><h3 id="双亲委托模型"><a href="#双亲委托模型" class="headerlink" title="双亲委托模型"></a>双亲委托模型</h3><p>双亲委托模型这样可以避免重复加载，当父亲已经加载了该类的时候，就没有必要子ClassLoader再加载一次。考虑到安全因素，我们试想一下，如果不使用这种委托模式，那我们就可以随时使用自定义的String来动态替代java核心api中定义的类型，这样会存在非常大的安全隐患，而双亲委托的方式，就可以避免这种情况，因为String已经在启动时就被引导类加载器（Bootstrcp ClassLoader）加载，所以用户自定义的ClassLoader永远也无法加载一个自己写的String，除非你改变JDK中ClassLoader搜索类的默认算法。</p><h3 id="JVM如何判定两个class相同"><a href="#JVM如何判定两个class相同" class="headerlink" title="JVM如何判定两个class相同"></a>JVM如何判定两个class相同</h3><p>JVM在判定两个class是否相同时，不仅要判断两个类名是否相同，而且要判断是否由同一个类加载器实例加载的。只有两者同时满足的情况下，JVM才认为这两个class是相同的。就算两个class是同一份class字节码，如果被两个不同的ClassLoader实例所加载，JVM也会认为它们是两个不同class。</p><h3 id="ClassLoader的体系架构："><a href="#ClassLoader的体系架构：" class="headerlink" title="ClassLoader的体系架构："></a>ClassLoader的体系架构：</h3><p><img src="http://ww1.sinaimg.cn/large/7c80419fgy1fgv4yamroej20mf0fngva.jpg" alt=""></p><h2 id="URLClassLoader"><a href="#URLClassLoader" class="headerlink" title="URLClassLoader"></a>URLClassLoader</h2><p>首先介绍下URLClassLoader的简单用法，下面是我搜索资料的得出一些简单用法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MalformedURLException </span>&#123;</div><div class="line">    File file = <span class="keyword">new</span> File(<span class="string">"D:\\priv\\alanice\\learning\\other\\Secret.class"</span>);</div><div class="line">    URL url = file.toURI().toURL();</div><div class="line">    System.out.println(url);</div><div class="line">    URLClassLoader loader = <span class="keyword">new</span> URLClassLoader(<span class="keyword">new</span> URL[]&#123;url&#125;, Thread.currentThread().getContextClassLoader());</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Class c = loader.loadClass(<span class="string">"priv.alanice.learning.other.Secret"</span>);</div><div class="line">        System.out.println(ObjectMethodAnalyzer.toString(c));</div><div class="line">    &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</div><div class="line">        System.out.println(<span class="string">"Secret not found!"</span>);</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>可惜的是这个没跑通，显示ClassNotFound，不知道具体是什么原因，难道必须把class打包成jar才能用吗？希望在以后的学习里能了解更深入点。</p><h2 id="自定义ClassLoader"><a href="#自定义ClassLoader" class="headerlink" title="自定义ClassLoader"></a>自定义ClassLoader</h2><p>前文提到我们可以通过继承ClassLoader或者URLClassLoader来自定义我们自己的ClassLoader，这里我们就实现一个加载一个被加密的class文件。</p><p>这里有用到之前写过的加密模块<a href="http://blog.alanice.cn/2017/06/15/a51c6b72-53d3-4f6b-8bfb-825bd66c1183">Java加密工具</a></p><p>编写自己的类加载器，只需要继承ClassLoader类，然后覆盖findClass(String name)方法。</p><p>ClassLoader超类的loadClass方法用于将类的加载操作委托给其父类加载器去进行，只有当该类尚未加载并且父类加载器也无法加载该类时，才调用findClass方法。</p><p>如果要实现findClass方法，必须要做到以下两点:</p><ol><li>为来自本地文件系统或者其他来源的类加载器提供字节码（解密工作就在这里进行）</li><li>调用ClassLoader超类的definClass方法，向虚拟机提供字节码</li></ol><p><strong>注意</strong>：调用ClassLoader的loadClass方法时需要指定完整的包名和类名，否则会出错。</p><p>下面是一个简单的demo：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.FileInputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.net.MalformedURLException;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecretClassLoader</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String key;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setKey</span><span class="params">(String k)</span> </span>&#123;</div><div class="line">        key = k;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SecretClassLoader</span><span class="params">(String k)</span> </span>&#123;</div><div class="line">        key = k;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">protected</span> Class&lt;?&gt; findClass(String name) <span class="keyword">throws</span> ClassNotFoundException &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">byte</span>[] classBytes = loadClassBytes(name);</div><div class="line">            Class&lt;?&gt; c = defineClass(name, classBytes, <span class="number">0</span>, classBytes.length);</div><div class="line">            <span class="keyword">if</span> (c == <span class="keyword">null</span>) <span class="keyword">throw</span> <span class="keyword">new</span> ClassNotFoundException(name);</div><div class="line">            <span class="keyword">return</span> c;</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ClassNotFoundException(name);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] loadClassBytes(String name) <span class="keyword">throws</span> IOException &#123;</div><div class="line">        String cname = <span class="string">"out/production/Learning-Java/"</span> + name.replace(<span class="string">'.'</span>, <span class="string">'/'</span>) + <span class="string">".secret"</span>;</div><div class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(cname);</div><div class="line">        ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</div><div class="line">        CryptoCipher.decode(fis, baos, key);</div><div class="line">        <span class="keyword">byte</span>[] bytes = baos.toByteArray();</div><div class="line">        fis.close();</div><div class="line">        baos.close();</div><div class="line">        <span class="keyword">return</span> bytes;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MalformedURLException </span>&#123;</div><div class="line">        SecretClassLoader loader = <span class="keyword">new</span> SecretClassLoader(<span class="string">"0ZRmCCkKnd4eO/QoU8X0uA=="</span>);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Class c = loader.loadClass(<span class="string">"priv.alanice.learning.other.Secret"</span>);</div><div class="line">            SecretInterface s = (SecretInterface) c.newInstance();</div><div class="line">            System.out.println(s.secretMethod(<span class="string">"Alan"</span>));</div><div class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</div><div class="line">            System.out.println(<span class="string">"Secret not found!"</span>);</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (InstantiationException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ClassLoader介绍&quot;&gt;&lt;a href=&quot;#ClassLoader介绍&quot; class=&quot;headerlink&quot; title=&quot;ClassLoader介绍&quot;&gt;&lt;/a&gt;ClassLoader介绍&lt;/h2&gt;&lt;h3 id=&quot;什么是ClassLoader&quot;&gt;&lt;a href=&quot;#什么是ClassLoader&quot; class=&quot;headerlink&quot; title=&quot;什么是ClassLoader?&quot;&gt;&lt;/a&gt;什么是ClassLoader?&lt;/h3&gt;&lt;p&gt;一个Java程序，不是管是CS还是BS应用，都是由若干个.class文件组织而成的一个完整的Java应用程序，当程序在运行时，即会调用该程序的一个入口函数来调用系统的相关功能，而这些功能都被封装在不同的class文件当中，所以经常要从这个class文件中要调用另外一个class文件中的方法，如果另外一个文件不存在的，则会引发系统异常。而程序在启动的时候，并不会一次性加载程序所要用的所有class文件，而是根据程序的需要，通过Java的类加载机制（ClassLoader）来动态加载某个class文件到内存当中的，从而只有class文件被载入到了内存之后，才能被其它class所引用。所以ClassLoader就是用来动态加载class文件到内存当中用的。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.alanice.cn/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>Java加密类</title>
    <link href="http://blog.alanice.cn/2017/06/15/a51c6b72-53d3-4f6b-8bfb-825bd66c1183/"/>
    <id>http://blog.alanice.cn/2017/06/15/a51c6b72-53d3-4f6b-8bfb-825bd66c1183/</id>
    <published>2017-06-15T00:00:00.000Z</published>
    <updated>2017-06-15T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Cipher类介绍"><a href="#Cipher类介绍" class="headerlink" title="Cipher类介绍"></a>Cipher类介绍</h2><p>此类为加密和解密提供密码功能。它构成了 Java Cryptographic Extension （JCE） 框架的核心。<br>Cipher类是一个引擎类，它需要通过getInstance()工厂方法来实例化对象。为创建 Cipher 对象，应用程序调用 Cipher 的 getInstance 方法并将所请求转换 的名称传递给它。还可以指定提供者的名称（可选）。</p><p>之后通过其init方法初始化它的模式 (加密 / 解密) ， update方法进行数据块的加密。</p><a id="more"></a><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Cipher cipher = Cipher.getInstance(<span class="string">"AES"</span>);</div><div class="line">cipher.init(Cipher.ENCRYPT_MODE, key);</div></pre></td></tr></table></figure><h2 id="生成秘钥"><a href="#生成秘钥" class="headerlink" title="生成秘钥"></a>生成秘钥</h2><p>Java的java.security算法内置了很多加密算法，比如AES，DES，RSA等。</p><p>使用这些算法需要用专门的秘钥对象SecretKey。</p><p>密钥生成可以使用KeyGenerator生成秘钥，保存这个秘钥的方式有3种：</p><ol><li>通过ObjectOutputStream把这个KeyGenerator保存下来；</li><li>通过一般的OutputStream把秘钥的字节保存下来；</li><li>把秘钥的字节进行BASE64处理成字符串；</li></ol><p>下面有一个简单实例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateKey</span><span class="params">(<span class="keyword">final</span> String Algorithm)</span> <span class="keyword">throws</span> NoSuchAlgorithmException </span>&#123;</div><div class="line">    KeyGenerator keyGenerator = KeyGenerator.getInstance(Algorithm);</div><div class="line">    SecureRandom random = <span class="keyword">new</span> SecureRandom();</div><div class="line">    keyGenerator.init(random);</div><div class="line">    SecretKey key = keyGenerator.generateKey();</div><div class="line">    <span class="keyword">byte</span>[] bytes = key.getEncoded();</div><div class="line">    <span class="keyword">return</span> Base64.getEncoder().encodeToString(bytes);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>会生成形如0ZRmCCkKnd4eO/QoU8X0uA==的字符串</p><h2 id="文件的加解密"><a href="#文件的加解密" class="headerlink" title="文件的加解密"></a>文件的加解密</h2><p>Java内置的CipherOutputStream流可以对流对象进行自动加密解密，用起来很方便。</p><p>但是我在使用的过程发现一个问题，就是文件的最后几个字节 (不足16字节的那部分) 可能存在丢失，所以我进行了小小的改进，当加密到文件的最后一个数据块时，调用cipher的doFinal方法，这样可以有效避免字节丢失问题。</p><p>具体实现如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> javax.crypto.*;</div><div class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</div><div class="line"><span class="keyword">import</span> java.io.*;</div><div class="line"><span class="keyword">import</span> java.security.InvalidKeyException;</div><div class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</div><div class="line"><span class="keyword">import</span> java.security.SecureRandom;</div><div class="line"><span class="keyword">import</span> java.util.Base64;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CryptoCipher</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ENCRYPT_MODE = Cipher.ENCRYPT_MODE;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DECRYPT_MODE = Cipher.DECRYPT_MODE;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BLOCK_SIZE = <span class="number">1024</span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">generateKey</span><span class="params">(<span class="keyword">final</span> String Algorithm)</span> <span class="keyword">throws</span> NoSuchAlgorithmException </span>&#123;</div><div class="line">        KeyGenerator keyGenerator = KeyGenerator.getInstance(Algorithm);</div><div class="line">        SecureRandom random = <span class="keyword">new</span> SecureRandom();</div><div class="line">        keyGenerator.init(random);</div><div class="line">        SecretKey key = keyGenerator.generateKey();</div><div class="line">        <span class="keyword">byte</span>[] bytes = key.getEncoded();</div><div class="line">        <span class="keyword">return</span> Base64.getEncoder().encodeToString(bytes);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Encode_Decode</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> MODE,InputStream is, OutputStream os, String keyStr)</span> </span>&#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">byte</span>[] bytes = Base64.getDecoder().decode(keyStr);</div><div class="line">            SecretKey key = <span class="keyword">new</span> SecretKeySpec(bytes, <span class="string">"AES"</span>);</div><div class="line">            Cipher cipher = Cipher.getInstance(<span class="string">"AES"</span>);</div><div class="line">            cipher.init(MODE, key);</div><div class="line">            CipherOutputStream out = <span class="keyword">new</span> CipherOutputStream(os, cipher);</div><div class="line">            <span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[BLOCK_SIZE];</div><div class="line">            <span class="keyword">int</span> length;</div><div class="line">            <span class="keyword">while</span> ((length = is.read(buff)) != -<span class="number">1</span>) &#123;</div><div class="line">                <span class="keyword">if</span> (length == BLOCK_SIZE)</div><div class="line">                    out.write(buff, <span class="number">0</span>, length);</div><div class="line">                <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="keyword">byte</span>[] finalBytes = cipher.doFinal(buff, <span class="number">0</span>, length);</div><div class="line">                    os.write(finalBytes);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (NoSuchPaddingException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (InvalidKeyException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (BadPaddingException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; <span class="keyword">catch</span> (IllegalBlockSizeException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">encode</span><span class="params">(InputStream is, OutputStream os, String keyStr)</span> </span>&#123;</div><div class="line">        Encode_Decode(ENCRYPT_MODE, is, os, keyStr);</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">decode</span><span class="params">(InputStream is, OutputStream os, String keyStr)</span> </span>&#123;</div><div class="line">        Encode_Decode(DECRYPT_MODE, is, os, keyStr);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Cipher类介绍&quot;&gt;&lt;a href=&quot;#Cipher类介绍&quot; class=&quot;headerlink&quot; title=&quot;Cipher类介绍&quot;&gt;&lt;/a&gt;Cipher类介绍&lt;/h2&gt;&lt;p&gt;此类为加密和解密提供密码功能。它构成了 Java Cryptographic Extension （JCE） 框架的核心。&lt;br&gt;Cipher类是一个引擎类，它需要通过getInstance()工厂方法来实例化对象。为创建 Cipher 对象，应用程序调用 Cipher 的 getInstance 方法并将所请求转换 的名称传递给它。还可以指定提供者的名称（可选）。&lt;/p&gt;&lt;p&gt;之后通过其init方法初始化它的模式 (加密 / 解密) ， update方法进行数据块的加密。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.alanice.cn/categories/Java/"/>
    
    
      <category term="加密" scheme="http://blog.alanice.cn/tags/%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>Java动态代理</title>
    <link href="http://blog.alanice.cn/2017/06/12/19bab8c9-de39-4078-9d5b-116ad90f994f/"/>
    <id>http://blog.alanice.cn/2017/06/12/19bab8c9-de39-4078-9d5b-116ad90f994f/</id>
    <published>2017-06-12T00:00:00.000Z</published>
    <updated>2017-06-12T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java动态代理介绍"><a href="#Java动态代理介绍" class="headerlink" title="Java动态代理介绍"></a>Java动态代理介绍</h2><p>代理模式是常用的java设计模式，它的特征是代理类与委托类有同样的接口，代理类主要负责为委托类预处理消息、过滤消息、把消息转发给委托类，以及事后处理消息等。代理类与委托类之间通常会存在关联关系，一个代理类的对象与一个委托类的对象关联，代理类的对象本身并不真正实现服务，而是通过调用委托类的对象的相关方法，来提供特定的服务。</p><p>代理模式上，基本上有Subject角色，RealSubject角色，Proxy角色。其中：Subject角色负责定义RealSubject和Proxy角色应该实现的接口；RealSubject角色用来真正完成业务服务功能；Proxy角色负责将自身的Request请求，调用realsubject 对应的request功能来实现业务功能，自己不真正做业务。</p><p>代理类处理的逻辑很简单：在调用某个方法前及方法后做一些额外的业务。换一种思路就是：在触发（invoke）真实角色的方法之前或者之后做一些额外的业务。那么，为了构造出具有通用性和简单性的代理类，可以将所有的触发真实角色动作交给一个触发的管理器，让这个管理器统一地管理触发。</p><a id="more"></a><h2 id="JDK方式实现动态代理"><a href="#JDK方式实现动态代理" class="headerlink" title="JDK方式实现动态代理"></a>JDK方式实现动态代理</h2><p>JDK为RealSubject对象创建动态代理对象，主要做了以下工作：</p><ol><li>获取RealSubject上的所有接口列表。</li><li>确定要生成的动态代理类的类名，默认为com.sun.proxy.$ProxyXXX</li><li>根据需要实现接口信息，在代码中动态创建该Proxy的字节码</li><li>将对应的字节码转换为对应的class对象</li><li>创建InvocationHandler实例，用来处理Proxy所有方法调用</li><li>Proxy的class对象以创建的handler对象为参，实例化Proxy对象</li></ol><p>JDK通过java.lang.reflect.Proxy来支持动态代理，一般情况下，使用方法newProxyInstanceof来创建Proxy类，而对于InvocationHandler，需要实现它的invoke方法，在调用代理对象中的每一个方法时，在代码内部，都是直接调用了InvocationHandler的invoke方法，而invoke方法根据代理类传递给自己的method参数来区分是什么方法。</p><p>实例如下：</p><h3 id="Download-java"><a href="#Download-java" class="headerlink" title="Download.java"></a>Download.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Downloader</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloadImage</span><span class="params">(String imageURL, String filename)</span> <span class="keyword">throws</span> Throwable</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Subject-java"><a href="#Subject-java" class="headerlink" title="Subject.java"></a>Subject.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.*;</div><div class="line"><span class="keyword">import</span> java.net.URL;</div><div class="line"><span class="keyword">import</span> java.net.URLConnection;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Subject</span> <span class="keyword">implements</span> <span class="title">Downloader</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloadImage</span><span class="params">(String imageURL, String filename)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Downloading image from "</span> + imageURL + <span class="string">" to "</span> + filename + <span class="string">"..."</span>);</div><div class="line">        URL url = <span class="keyword">new</span> URL(imageURL);</div><div class="line">        URLConnection con = url.openConnection();</div><div class="line">        BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(con.getInputStream());</div><div class="line">        BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(filename));</div><div class="line">        <span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4096</span>];</div><div class="line">        <span class="keyword">int</span> length;</div><div class="line">        <span class="keyword">while</span> ((length = bis.read(buff)) != -<span class="number">1</span>) &#123;</div><div class="line">            bos.write(buff, <span class="number">0</span>, length);</div><div class="line">        &#125;</div><div class="line">        bis.close();</div><div class="line">        bos.close();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="ProxyHander-java"><a href="#ProxyHander-java" class="headerlink" title="ProxyHander.java"></a>ProxyHander.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.lang.reflect.*;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyHander</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Object proxiedObj;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ProxyHander</span><span class="params">(Object obj)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>();</div><div class="line">        proxiedObj = obj;</div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</div><div class="line">        Object result = method.invoke(proxiedObj, args);</div><div class="line">        <span class="keyword">long</span> end   = System.currentTimeMillis();</div><div class="line">        System.out.println(method.getName() + <span class="string">" cost "</span> + (end - start) + <span class="string">" ms..."</span>);</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line">        ProxyHander proxyHander = <span class="keyword">new</span> ProxyHander(<span class="keyword">new</span> Subject());</div><div class="line">        Downloader proxy = (Downloader) Proxy.newProxyInstance(Subject.class.getClassLoader(), Subject.class.getInterfaces(), proxyHander);</div><div class="line">        proxy.downloadImage(<span class="string">"http://202.114.96.204/cache/9/04/cankaoxiaoxi.com/df328181a0da90521ad4da4ad30f8d35/1496884353332.jpg"</span>, <span class="string">"image.jpg"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="输出结果"><a href="#输出结果" class="headerlink" title="输出结果"></a>输出结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Downloading image from http://202.114.96.204/cache/9/04/cankaoxiaoxi.com/df328181a0da90521ad4da4ad30f8d35/1496884353332.jpg to image.jpg...</div><div class="line">downloadImage cost 125 ms...</div></pre></td></tr></table></figure><h2 id="cglib实现动态代理"><a href="#cglib实现动态代理" class="headerlink" title="cglib实现动态代理"></a>cglib实现动态代理</h2><p>JDK中提供的生成动态代理类的机制有个鲜明的特点是： 某个类必须有实现的接口，而生成的代理类也只能代理某个类接口定义的方法，果某个类没有实现接口，那么这个类就不能同JDK产生动态代理了！CGLIB（Code Generation Library），是一个强大的，高性能，高质量的Code生成类库，它可以在运行期扩展Java类与实现Java接口。</p><p>cglib 创建某动态代理类的模式是：</p><ol><li>查找类上的所有非final的public类型的方法定义</li><li>将这些方法的定义转换成字节码</li><li>将组成的字节码转换成相应的代理的class对象</li><li>实现MethodInterceptor接口，用来处理对代理类上所有方法的请求（和InvocationHandler的功能和角色是一样的）</li></ol><p>实例如下：</p><h3 id="Subject-java-1"><a href="#Subject-java-1" class="headerlink" title="Subject.java"></a>Subject.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.*;</div><div class="line"><span class="keyword">import</span> java.net.URL;</div><div class="line"><span class="keyword">import</span> java.net.URLConnection;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Subject</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloadImage</span><span class="params">(String imageURL, String filename)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Downloading image from "</span> + imageURL + <span class="string">" to "</span> + filename + <span class="string">" ..."</span>);</div><div class="line">        URL url = <span class="keyword">new</span> URL(imageURL);</div><div class="line">        URLConnection con = url.openConnection();</div><div class="line">        BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(con.getInputStream());</div><div class="line">        BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(filename));</div><div class="line">        <span class="keyword">byte</span>[] buff = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4096</span>];</div><div class="line">        <span class="keyword">int</span> length;</div><div class="line">        <span class="keyword">while</span> ((length = bis.read(buff)) != -<span class="number">1</span>) &#123;</div><div class="line">            bos.write(buff, <span class="number">0</span>, length);</div><div class="line">        &#125;</div><div class="line">        bis.close();</div><div class="line">        bos.close();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="SubjectEnhancer-java"><a href="#SubjectEnhancer-java" class="headerlink" title="SubjectEnhancer.java"></a>SubjectEnhancer.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> net.sf.cglib.proxy.MethodInterceptor;</div><div class="line"><span class="keyword">import</span> net.sf.cglib.proxy.MethodProxy;</div><div class="line"><span class="keyword">import</span> java.lang.reflect.Method;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubjectEnhancer</span> <span class="keyword">implements</span> <span class="title">MethodInterceptor</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Object o, Method method, Object[] objects, MethodProxy methodProxy)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</div><div class="line">        Object result = methodProxy.invokeSuper(o, objects);</div><div class="line">        <span class="keyword">long</span> end   = System.currentTimeMillis();</div><div class="line">        System.out.println(method.getName() + <span class="string">" cost "</span> + (end - start) + <span class="string">" ms..."</span>);</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="SubjectInterceptor-java"><a href="#SubjectInterceptor-java" class="headerlink" title="SubjectInterceptor.java"></a>SubjectInterceptor.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> net.sf.cglib.proxy.MethodInterceptor;</div><div class="line"><span class="keyword">import</span> net.sf.cglib.proxy.MethodProxy;</div><div class="line"><span class="keyword">import</span> java.lang.reflect.Method;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SubjectInterceptor</span> <span class="keyword">implements</span> <span class="title">MethodInterceptor</span> </span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Object o, Method method, Object[] objects, MethodProxy methodProxy)</span> <span class="keyword">throws</span> Throwable </span>&#123;</div><div class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</div><div class="line">        Object result = methodProxy.invokeSuper(o, objects);</div><div class="line">        <span class="keyword">long</span> end   = System.currentTimeMillis();</div><div class="line">        System.out.println(method.getName() + <span class="string">" cost "</span> + (end - start) + <span class="string">" ms..."</span>);</div><div class="line">        <span class="keyword">return</span> result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Main-java-1"><a href="#Main-java-1" class="headerlink" title="Main.java"></a>Main.java</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        Subject subject = ProxyFactory.getInstance(<span class="keyword">new</span> SubjectInterceptor(), Subject.class);</div><div class="line">        subject.downloadImage(<span class="string">"http://202.114.96.204/cache/9/04/cankaoxiaoxi.com/df328181a0da90521ad4da4ad30f8d35/1496884353332.jpg"</span>, <span class="string">"image.jpg"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Downloading image from http://202.114.96.204/cache/9/04/cankaoxiaoxi.com/df328181a0da90521ad4da4ad30f8d35/1496884353332.jpg to image.jpg ...</div><div class="line">downloadImage cost 219 ms...</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Java动态代理介绍&quot;&gt;&lt;a href=&quot;#Java动态代理介绍&quot; class=&quot;headerlink&quot; title=&quot;Java动态代理介绍&quot;&gt;&lt;/a&gt;Java动态代理介绍&lt;/h2&gt;&lt;p&gt;代理模式是常用的java设计模式，它的特征是代理类与委托类有同样的接口，代理类主要负责为委托类预处理消息、过滤消息、把消息转发给委托类，以及事后处理消息等。代理类与委托类之间通常会存在关联关系，一个代理类的对象与一个委托类的对象关联，代理类的对象本身并不真正实现服务，而是通过调用委托类的对象的相关方法，来提供特定的服务。&lt;/p&gt;&lt;p&gt;代理模式上，基本上有Subject角色，RealSubject角色，Proxy角色。其中：Subject角色负责定义RealSubject和Proxy角色应该实现的接口；RealSubject角色用来真正完成业务服务功能；Proxy角色负责将自身的Request请求，调用realsubject 对应的request功能来实现业务功能，自己不真正做业务。&lt;/p&gt;&lt;p&gt;代理类处理的逻辑很简单：在调用某个方法前及方法后做一些额外的业务。换一种思路就是：在触发（invoke）真实角色的方法之前或者之后做一些额外的业务。那么，为了构造出具有通用性和简单性的代理类，可以将所有的触发真实角色动作交给一个触发的管理器，让这个管理器统一地管理触发。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://blog.alanice.cn/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>字符串匹配算法</title>
    <link href="http://blog.alanice.cn/2017/06/10/fb43a7b4-88c2-4fe6-9c1b-aea85ab6dd7b/"/>
    <id>http://blog.alanice.cn/2017/06/10/fb43a7b4-88c2-4fe6-9c1b-aea85ab6dd7b/</id>
    <published>2017-06-10T00:00:00.000Z</published>
    <updated>2017-06-10T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="KMP算法"><a href="#KMP算法" class="headerlink" title="KMP算法"></a>KMP算法</h2><h3 id="算法介绍"><a href="#算法介绍" class="headerlink" title="算法介绍"></a>算法介绍</h3><p>KMP算法的关键是利用匹配失败后的信息，尽量减少模式串与主串的匹配次数以达到快速匹配的目的。具体实现就是实现一个next()函数，函数本身包含了模式串的局部匹配信息。</p><p>KMP算法中，对于每一个模式串我们会事先计算出模式串的内部匹配信息，在匹配失败时最大的移动模式串，以减少匹配次数。</p><p>比如，在简单的一次匹配失败后，我们会想将模式串尽量的右移和主串进行匹配。右移的距离在KMP算法中是如此计算的：在已经匹配的模式串子串中，找出最长的相同的前缀和后缀，然后移动使它们重叠。</p><a id="more"></a><h3 id="算法实现"><a href="#算法实现" class="headerlink" title="算法实现"></a>算法实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">KMPSearch</span><span class="params">(String target, String pattern)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span>[] nextVal = getNextVal(pattern);</div><div class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, N = target.length(), M = pattern.length();</div><div class="line">    <span class="keyword">while</span> (i &lt; N &amp;&amp; j &lt; M) &#123;</div><div class="line">        <span class="keyword">if</span> (j == -<span class="number">1</span> || target.charAt(i) == pattern.charAt(j)) &#123; i++; j++; &#125;</div><div class="line">        <span class="keyword">else</span> j = nextVal[j];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (j &gt;= M) <span class="keyword">return</span> i - M;</div><div class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] getNextVal(String pattern) &#123;</div><div class="line">    <span class="keyword">int</span>[] nextVal = <span class="keyword">new</span> <span class="keyword">int</span>[pattern.length()];</div><div class="line">    nextVal[<span class="number">0</span>] = -<span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = -<span class="number">1</span>;</div><div class="line">    <span class="keyword">int</span> M = pattern.length() - <span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span> (i &lt; M) &#123;</div><div class="line">        <span class="keyword">if</span> (j == -<span class="number">1</span> || pattern.charAt(i) == pattern.charAt(j)) &#123;</div><div class="line">            i++; j++;</div><div class="line">            <span class="keyword">if</span> (pattern.charAt(i) == pattern.charAt(j)) nextVal[i] = nextVal[j];</div><div class="line">            <span class="keyword">else</span> nextVal[i] = j;</div><div class="line">        &#125; <span class="keyword">else</span> j = nextVal[j];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> nextVal;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="BM算法"><a href="#BM算法" class="headerlink" title="BM算法"></a>BM算法</h2><h3 id="算法介绍-1"><a href="#算法介绍-1" class="headerlink" title="算法介绍"></a>算法介绍</h3><p>Boyer-Moore充分使用预处理P的信息来尽可能跳过更多的字符。通常，我们比较一个字符串都是从首字母开始，逐个比较下去。一旦发现有不同的字符，就需要从头开始进行下一次比较。这样，就需要将字串中的所有字符一一比较。</p><p>Boyer-Moore算法的关键在于，当P的最后一个字符被比较完成后，我们可以决定跳过一个或更多个字符。如果最后一个字符不匹配，那么就没必要继续比较前一个字符。如果最后一个字符未在P中出现，那么我们可以直接跳过T的n个字符，比较接下来的n个字符，n为P的长度（见定义）。</p><p>如果最后一个字符出现在P中，那么跳过的字符数需要进行计算（也就是将P整体往后移），然后继续前面的步骤来比较。通过这种字符的移动方式来代替逐个比较是这个算法如此高效的关键所在。</p><h3 id="算法实现-1"><a href="#算法实现-1" class="headerlink" title="算法实现"></a>算法实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">BMSearch</span><span class="params">(String target, String pattern)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span>[] right = getRight(pattern);</div><div class="line">    <span class="keyword">int</span> N = target.length(), M = pattern.length(), skip = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= N - M; i += skip) &#123;</div><div class="line">        skip = <span class="number">0</span>;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = M - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</div><div class="line">            <span class="keyword">if</span> (pattern.charAt(j) != target.charAt(i + j)) &#123;</div><div class="line">                skip = j - right[target.charAt(i + j)];</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        <span class="keyword">if</span> (skip == <span class="number">0</span>) <span class="keyword">return</span> i;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] getRight(String pattern) &#123;</div><div class="line">    <span class="keyword">int</span>[] right = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</div><div class="line">    <span class="keyword">int</span> M = pattern.length();</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) right[i] = -<span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++) right[pattern.charAt(i)] = i;</div><div class="line">    <span class="keyword">return</span> right;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="RK算法"><a href="#RK算法" class="headerlink" title="RK算法"></a>RK算法</h2><h3 id="算法介绍-2"><a href="#算法介绍-2" class="headerlink" title="算法介绍"></a>算法介绍</h3><p>如果两个字符串hash后的值不相同，则它们肯定不相同；如果它们hash后的值相同，它们不一定相同。</p><p>RK算法的基本思想就是：将模式串P的hash值跟主串S中的每一个长度为|P|的子串的hash值比较。如果不同，则它们肯定不相等；如果相同，则再诸位比较之。</p><h3 id="算法实现-有问题，按书上敲的，但是结果不对"><a href="#算法实现-有问题，按书上敲的，但是结果不对" class="headerlink" title="~~算法实现 (有问题，按书上敲的，但是结果不对) ~~"></a>~~算法实现 (有问题，按书上敲的，但是结果不对) ~~</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">RKSearch</span><span class="params">(String target, String pattern)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> N = target.length(), M = pattern.length();</div><div class="line">    <span class="keyword">int</span> R = <span class="number">256</span>, Q = <span class="number">997</span>, RM = <span class="number">1</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; M; i++)</div><div class="line">        RM = (R * RM) % Q;</div><div class="line">    <span class="keyword">long</span> patternHash = hash(pattern, M, R, Q);</div><div class="line">    <span class="keyword">long</span> targetHash  = hash(target,  M, R, Q);</div><div class="line">    <span class="keyword">if</span> (patternHash == targetHash &amp;&amp; check(target, pattern, <span class="number">0</span>)) <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = M; i &lt; N; i++) &#123;</div><div class="line">        <span class="comment">// 减去最前面的hash，加上最后面的hash</span></div><div class="line">        targetHash = (targetHash + Q - RM * targetHash * target.charAt(i - M) % Q) % Q;</div><div class="line">        targetHash = (targetHash * R + target.charAt(i)) % Q;</div><div class="line">        <span class="keyword">if</span> (targetHash == patternHash &amp;&amp; check(target, pattern, i - M + <span class="number">1</span>)) <span class="keyword">return</span> i - M + <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">hash</span><span class="params">(String key, <span class="keyword">int</span> M, <span class="keyword">int</span> R, <span class="keyword">int</span> Q)</span> </span>&#123;</div><div class="line">    <span class="keyword">long</span> h = <span class="number">0</span>;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++)</div><div class="line">        h = (R * h + key.charAt(i)) % Q;</div><div class="line">    <span class="keyword">return</span> h;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(String target, String pattern, <span class="keyword">int</span> i)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> pattern.equals(target.substring(i, i + pattern.length()));</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;KMP算法&quot;&gt;&lt;a href=&quot;#KMP算法&quot; class=&quot;headerlink&quot; title=&quot;KMP算法&quot;&gt;&lt;/a&gt;KMP算法&lt;/h2&gt;&lt;h3 id=&quot;算法介绍&quot;&gt;&lt;a href=&quot;#算法介绍&quot; class=&quot;headerlink&quot; title=&quot;算法介绍&quot;&gt;&lt;/a&gt;算法介绍&lt;/h3&gt;&lt;p&gt;KMP算法的关键是利用匹配失败后的信息，尽量减少模式串与主串的匹配次数以达到快速匹配的目的。具体实现就是实现一个next()函数，函数本身包含了模式串的局部匹配信息。&lt;/p&gt;&lt;p&gt;KMP算法中，对于每一个模式串我们会事先计算出模式串的内部匹配信息，在匹配失败时最大的移动模式串，以减少匹配次数。&lt;/p&gt;&lt;p&gt;比如，在简单的一次匹配失败后，我们会想将模式串尽量的右移和主串进行匹配。右移的距离在KMP算法中是如此计算的：在已经匹配的模式串子串中，找出最长的相同的前缀和后缀，然后移动使它们重叠。&lt;/p&gt;
    
    </summary>
    
      <category term="Algorithm" scheme="http://blog.alanice.cn/categories/Algorithm/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows 10 Tips</title>
    <link href="http://blog.alanice.cn/2017/06/07/efa3a000-8619-4b89-a5ba-852aa1217b86/"/>
    <id>http://blog.alanice.cn/2017/06/07/efa3a000-8619-4b89-a5ba-852aa1217b86/</id>
    <published>2017-06-07T00:00:00.000Z</published>
    <updated>2017-06-07T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Win10-右键新建菜单"><a href="#Win10-右键新建菜单" class="headerlink" title="Win10 右键新建菜单"></a>Win10 右键新建菜单</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Windows Registry Editor Version 5.00</div><div class="line"></div><div class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Discardable\PostSetup\ShellNew]</div><div class="line">&quot;Classes&quot;=hex(7):2e,00,74,00,78,00,74,00,00,00,2e,00,64,00,6f,00,63,00,78,00,\</div><div class="line">  00,00,2e,00,70,00,70,00,74,00,78,00,00,00,2e,00,78,00,6c,00,73,00,78,00,00,\</div><div class="line">  00,46,00,6f,00,6c,00,64,00,65,00,72,00,00,00,00,00</div><div class="line">&quot;~reserved~&quot;=hex:08,00,00,00,00,00,06,00</div></pre></td></tr></table></figure><a id="more"></a><h2 id="清除图标缓存"><a href="#清除图标缓存" class="headerlink" title="清除图标缓存"></a>清除图标缓存</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">taskkill</span> /f /im explorer.exe</div><div class="line"></div><div class="line"><span class="built_in">attrib</span> -h -s -r "<span class="variable">%userprofile%</span>\AppData\Local\IconCache.db"</div><div class="line"></div><div class="line"><span class="built_in">del</span> /f "<span class="variable">%userprofile%</span>\AppData\Local\IconCache.db"</div><div class="line"></div><div class="line"><span class="built_in">attrib</span> /s /d -h -s -r "<span class="variable">%userprofile%</span>\AppData\Local\Microsoft\Windows\Explorer\*"</div><div class="line"></div><div class="line"><span class="built_in">del</span> /f "<span class="variable">%userprofile%</span>\AppData\Local\Microsoft\Windows\Explorer\thumbcache_32.db"</div><div class="line"><span class="built_in">del</span> /f "<span class="variable">%userprofile%</span>\AppData\Local\Microsoft\Windows\Explorer\thumbcache_96.db"</div><div class="line"><span class="built_in">del</span> /f "<span class="variable">%userprofile%</span>\AppData\Local\Microsoft\Windows\Explorer\thumbcache_102.db"</div><div class="line"><span class="built_in">del</span> /f "<span class="variable">%userprofile%</span>\AppData\Local\Microsoft\Windows\Explorer\thumbcache_256.db"</div><div class="line"><span class="built_in">del</span> /f "<span class="variable">%userprofile%</span>\AppData\Local\Microsoft\Windows\Explorer\thumbcache_1024.db"</div><div class="line"><span class="built_in">del</span> /f "<span class="variable">%userprofile%</span>\AppData\Local\Microsoft\Windows\Explorer\thumbcache_idx.db"</div><div class="line"><span class="built_in">del</span> /f "<span class="variable">%userprofile%</span>\AppData\Local\Microsoft\Windows\Explorer\thumbcache_sr.db"</div><div class="line"></div><div class="line"><span class="built_in">echo</span> y|reg delete "HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\TrayNotify" /v IconStreams</div><div class="line"><span class="built_in">echo</span> y|reg delete "HKEY_CLASSES_ROOT\Local Settings\Software\Microsoft\Windows\CurrentVersion\TrayNotify" /v PastIconsStream</div><div class="line"></div><div class="line"><span class="built_in">start</span> explorer</div></pre></td></tr></table></figure><h2 id="图片打开方式添加默认图片查看器"><a href="#图片打开方式添加默认图片查看器" class="headerlink" title="图片打开方式添加默认图片查看器"></a>图片打开方式添加默认图片查看器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">Windows Registry Editor Version 5.00</div><div class="line"></div><div class="line">; Change Extension&apos;s File Type</div><div class="line"></div><div class="line">[HKEY_CURRENT_USER\Software\Classes\.jpg]</div><div class="line"></div><div class="line">@=&quot;PhotoViewer.FileAssoc.Tiff&quot;</div><div class="line"></div><div class="line">; Change Extension&apos;s File Type</div><div class="line"></div><div class="line">[HKEY_CURRENT_USER\Software\Classes\.jpeg]</div><div class="line"></div><div class="line">@=&quot;PhotoViewer.FileAssoc.Tiff&quot;</div><div class="line"></div><div class="line">; Change Extension&apos;s File Type</div><div class="line"></div><div class="line">[HKEY_CURRENT_USER\Software\Classes\.gif]</div><div class="line"></div><div class="line">@=&quot;PhotoViewer.FileAssoc.Tiff&quot;</div><div class="line"></div><div class="line">; Change Extension&apos;s File Type</div><div class="line"></div><div class="line">[HKEY_CURRENT_USER\Software\Classes\.png]</div><div class="line"></div><div class="line">@=&quot;PhotoViewer.FileAssoc.Tiff&quot;</div><div class="line"></div><div class="line">; Change Extension&apos;s File Type</div><div class="line"></div><div class="line">[HKEY_CURRENT_USER\Software\Classes\.bmp]</div><div class="line"></div><div class="line">@=&quot;PhotoViewer.FileAssoc.Tiff&quot;</div><div class="line"></div><div class="line">; Change Extension&apos;s File Type</div><div class="line"></div><div class="line">[HKEY_CURRENT_USER\Software\Classes\.pcx]</div><div class="line"></div><div class="line">@=&quot;PhotoViewer.FileAssoc.Tiff&quot;</div><div class="line"></div><div class="line">; Change Extension&apos;s File Type</div><div class="line"></div><div class="line">[HKEY_CURRENT_USER\Software\Classes\.tiff]</div><div class="line"></div><div class="line">@=&quot;PhotoViewer.FileAssoc.Tiff&quot;</div><div class="line"></div><div class="line">; Change Extension&apos;s File Type</div><div class="line"></div><div class="line">[HKEY_CURRENT_USER\Software\Classes\.ico]</div><div class="line"></div><div class="line">@=&quot;PhotoViewer.FileAssoc.Tiff&quot;</div></pre></td></tr></table></figure><h2 id="Win10某一路径下打开文件夹总是打开新窗口"><a href="#Win10某一路径下打开文件夹总是打开新窗口" class="headerlink" title="Win10某一路径下打开文件夹总是打开新窗口"></a>Win10某一路径下打开文件夹总是打开新窗口</h2><p>打开注册表，定位到<code>[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Modules\NavPane]</code>。</p><p>把NavPane这项删除，然后在原位置重建同名项。注销重登陆或重启（或者直接重启文件资源管理explorer.exe）后，就可以了。</p><p>如果你有用过PhotoshopCC2015，它的“快速导出为png”也会造成的这个问题。你导出到哪个库文件夹，那个文件夹就会这样。可以在注册表的这一项上，加上禁止写入修改的权限，来防止这个问题。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Win10-右键新建菜单&quot;&gt;&lt;a href=&quot;#Win10-右键新建菜单&quot; class=&quot;headerlink&quot; title=&quot;Win10 右键新建菜单&quot;&gt;&lt;/a&gt;Win10 右键新建菜单&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Windows Registry Editor Version 5.00&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Discardable\PostSetup\ShellNew]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;Classes&amp;quot;=hex(7):2e,00,74,00,78,00,74,00,00,00,2e,00,64,00,6f,00,63,00,78,00,\&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  00,00,2e,00,70,00,70,00,74,00,78,00,00,00,2e,00,78,00,6c,00,73,00,78,00,00,\&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  00,46,00,6f,00,6c,00,64,00,65,00,72,00,00,00,00,00&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;quot;~reserved~&amp;quot;=hex:08,00,00,00,00,00,06,00&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Other" scheme="http://blog.alanice.cn/categories/Other/"/>
    
    
  </entry>
  
  <entry>
    <title>Sublime Text 3 配置</title>
    <link href="http://blog.alanice.cn/2017/06/04/506f9f0c-7d9c-4225-b93a-2850f1b68d92/"/>
    <id>http://blog.alanice.cn/2017/06/04/506f9f0c-7d9c-4225-b93a-2850f1b68d92/</id>
    <published>2017-06-04T00:00:00.000Z</published>
    <updated>2017-06-04T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Sublime-Text-3-Windows编译选项"><a href="#Sublime-Text-3-Windows编译选项" class="headerlink" title="Sublime-Text-3 Windows编译选项"></a>Sublime-Text-3 Windows编译选项</h2><h3 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;cmd&quot;: [&quot;g++&quot;, &quot;$&#123;file&#125;&quot;, &quot;-o&quot;, &quot;$&#123;file_path&#125;/$&#123;file_base_name&#125;&quot;],</div><div class="line">    &quot;file_regex&quot;: &quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;,</div><div class="line">    &quot;working_dir&quot;: &quot;$&#123;file_path&#125;&quot;,</div><div class="line">    &quot;shell&quot;: true,</div><div class="line">    &quot;variants&quot;:[&#123;</div><div class="line">        &quot;name&quot;: &quot;Run&quot;,</div><div class="line">        &quot;cmd&quot;: [ &quot;g++&quot;, &quot;$&#123;file&#125;&quot;, &quot;-o&quot;, &quot;$&#123;file_path&#125;/$&#123;file_base_name&#125;&quot;, &quot;&amp;start&quot;, &quot;cmd&quot;, &quot;/c&quot;, &quot;$&#123;file_path&#125;/$&#123;file_base_name&#125;.exe &amp;echo. &amp;pause&quot;]</div><div class="line">    &#125;]</div><div class="line">&#125;</div></pre></td></tr></table></figure><a id="more"></a><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;cmd&quot;: [&quot;javac&quot;, &quot;-encoding&quot;, &quot;UTF-8&quot;, &quot;-d&quot;, &quot;.&quot;, &quot;$file&quot;],</div><div class="line">    &quot;file_regex&quot;: &quot;^(...*?):([0-9]*):?([0-9]*)&quot;,</div><div class="line">    &quot;working_dir&quot;: &quot;$&#123;file_path&#125;&quot;,</div><div class="line">    &quot;shell&quot;: true,</div><div class="line">    &quot;variants&quot;: [&#123;</div><div class="line">        &quot;name&quot;: &quot;Run&quot;,</div><div class="line">        &quot;cmd&quot;: [&quot;javac&quot;, &quot;-encoding&quot;, &quot;UTF-8&quot;, &quot;-d&quot;, &quot;.&quot;, &quot;$file&quot;, &quot;&amp;start&quot;, &quot;cmd&quot;, &quot;/c&quot;, &quot;java $&#123;file_base_name&#125; &amp;echo. &amp;pause&quot;]</div><div class="line">    &#125;]</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;cmd&quot;: [&quot;start&quot;, &quot;cmd&quot;, &quot;/c&quot;, &quot;python $file &amp;echo. &amp;pause&quot;],</div><div class="line">    &quot;file_regex&quot;: &quot;^(...*?):([0-9]*):?([0-9]*)&quot;,</div><div class="line">    &quot;working_dir&quot;: &quot;$&#123;file_path&#125;&quot;,</div><div class="line">    &quot;shell&quot;: true</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Sublime-Text-3-Ubuntu编译选项"><a href="#Sublime-Text-3-Ubuntu编译选项" class="headerlink" title="Sublime-Text-3 Ubuntu编译选项"></a>Sublime-Text-3 Ubuntu编译选项</h2><h3 id="C-1"><a href="#C-1" class="headerlink" title="C++"></a>C++</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;shell_cmd&quot;: &quot;g++7 \&quot;$&#123;file&#125;\&quot; -o \&quot;$&#123;file_path&#125;/$&#123;file_base_name&#125;\&quot;&quot;,</div><div class="line">    &quot;file_regex&quot;: &quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;,</div><div class="line">    &quot;working_dir&quot;: &quot;$&#123;file_path&#125;&quot;,</div><div class="line">    &quot;variants&quot;: [&#123;</div><div class="line">        &quot;name&quot;: &quot;Run&quot;,</div><div class="line">        &quot;shell_cmd&quot;: &quot;g++7 \&quot;$&#123;file&#125;\&quot; -o \&quot;$&#123;file_path&#125;/$&#123;file_base_name&#125;\&quot; &amp;&amp; gnome-terminal -x bash -c \&quot;$&#123;file_path&#125;/$&#123;file_base_name&#125;;echo;echo 按任意键继续...;read -n 1\&quot;&quot;</div><div class="line">    &#125;]</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Java-1"><a href="#Java-1" class="headerlink" title="Java"></a>Java</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;shell_cmd&quot;: &quot;javac -encoding UTF-8 -d . $file&quot;,</div><div class="line">    &quot;file_regex&quot;: &quot;^(...*?):([0-9]*):?([0-9]*)&quot;,</div><div class="line">    &quot;variants&quot;: [&#123;</div><div class="line">        &quot;name&quot;: &quot;Run&quot;,</div><div class="line">        &quot;shell_cmd&quot;: &quot;javac -encoding UTF-8 -d . $file &amp;&amp; gnome-terminal -x bash -c \&quot;java $&#123;file_base_name&#125;;echo;echo 按任意键继续...;read -n 1\&quot;&quot;</div><div class="line">    &#125;]</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Python-1"><a href="#Python-1" class="headerlink" title="Python"></a>Python</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;shell_cmd&quot;: &quot;gnome-terminal -x bash -c \&quot;python3 $file;echo;echo 按任意键继续...;read -n 1\&quot;&quot;,</div><div class="line">    &quot;file_regex&quot;: &quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;,</div><div class="line">    &quot;working_dir&quot;: &quot;$&#123;file_path&#125;&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Sublime-Text-3插件选项"><a href="#Sublime-Text-3插件选项" class="headerlink" title="Sublime-Text-3插件选项"></a>Sublime-Text-3插件选项</h2><h3 id="快捷键设置"><a href="#快捷键设置" class="headerlink" title="快捷键设置"></a>快捷键设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+r&quot;], &quot;command&quot;: &quot;reindent&quot; , &quot;args&quot;:&#123;&quot;single_line&quot;: false&#125;&#125;,</div><div class="line">    &#123; &quot;keys&quot;: [&quot;alt+m&quot;], &quot;command&quot;: &quot;markdown_preview&quot;, &quot;args&quot;: &#123; &quot;target&quot;: &quot;browser&quot;&#125; &#125;,</div><div class="line">    &#123; &quot;keys&quot;: [&quot;alt+c&quot;], &quot;command&quot;: &quot;convert_to_utf8&quot;, &quot;args&quot;: &#123;&quot;encoding&quot;: &quot;UTF8&quot;, &quot;stamp&quot;: &quot;0&quot; &#125; &#125;,</div><div class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+alt+c&quot;], &quot;command&quot;: &quot;convert_to_utf8&quot;, &quot;args&quot;: &#123;&quot;encoding&quot;: &quot;GBK&quot;, &quot;stamp&quot;: &quot;0&quot; &#125; &#125;,</div><div class="line">    &#123; &quot;keys&quot;: [&quot;alt+j&quot;], &quot;command&quot;: &quot;pretty_json&quot; &#125;,</div><div class="line">    &#123; &quot;keys&quot;: [&quot;ctrl+alt+j&quot;], &quot;command&quot;: &quot;un_pretty_json&quot; &#125;</div><div class="line">]</div></pre></td></tr></table></figure><h3 id="Markdown-Preview"><a href="#Markdown-Preview" class="headerlink" title="Markdown Preview"></a>Markdown Preview</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;enable_highlight&quot;: true,</div><div class="line">    &quot;enable_mathjax&quot;: true,</div><div class="line">    &quot;html_template&quot;: &quot;D:\\我的文档\\文档\\Ice\\学习\\Blog\\base.html&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h3 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    &quot;anaconda_linting&quot;: false</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="Ubuntu16-04下Sublime-Text-3无法输入中文"><a href="#Ubuntu16-04下Sublime-Text-3无法输入中文" class="headerlink" title="Ubuntu16.04下Sublime Text 3无法输入中文"></a>Ubuntu16.04下Sublime Text 3无法输入中文</h2><p>首先参考Github上的解决方案</p><p><a href="https://github.com/lyfeyaj/sublime-text-imfix" target="_blank" rel="external">sublime-text-imfix</a></p><p>为了使用鼠标右键打开文件时能够使用中文输入，还需要修改文件sublime_text.desktop的内容</p><p>将[Desktop Entry]中的字符串</p><p><code>Exec=/opt/sublime_text/sublime_text %F</code></p><p>修改为</p><p><code>Exec=bash -c &quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text %F&quot;</code></p><p>将[Desktop Action Window]中的字符串</p><p><code>Exec=/opt/sublime_text/sublime_text -n</code></p><p>修改为</p><p><code>Exec=bash -c &quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text -n&quot;</code></p><p>将[Desktop Action Document]中的字符串</p><p><code>Exec=/opt/sublime_text/sublime_text --command new_file</code></p><p>修改为</p><p><code>Exec=bash -c &quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text --command new_file&quot;</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Sublime-Text-3-Windows编译选项&quot;&gt;&lt;a href=&quot;#Sublime-Text-3-Windows编译选项&quot; class=&quot;headerlink&quot; title=&quot;Sublime-Text-3 Windows编译选项&quot;&gt;&lt;/a&gt;Sublime-Text-3 Windows编译选项&lt;/h2&gt;&lt;h3 id=&quot;C&quot;&gt;&lt;a href=&quot;#C&quot; class=&quot;headerlink&quot; title=&quot;C++&quot;&gt;&lt;/a&gt;C++&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;cmd&amp;quot;: [&amp;quot;g++&amp;quot;, &amp;quot;$&amp;#123;file&amp;#125;&amp;quot;, &amp;quot;-o&amp;quot;, &amp;quot;$&amp;#123;file_path&amp;#125;/$&amp;#123;file_base_name&amp;#125;&amp;quot;],&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;file_regex&amp;quot;: &amp;quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;working_dir&amp;quot;: &amp;quot;$&amp;#123;file_path&amp;#125;&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;shell&amp;quot;: true,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;quot;variants&amp;quot;:[&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;name&amp;quot;: &amp;quot;Run&amp;quot;,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;quot;cmd&amp;quot;: [ &amp;quot;g++&amp;quot;, &amp;quot;$&amp;#123;file&amp;#125;&amp;quot;, &amp;quot;-o&amp;quot;, &amp;quot;$&amp;#123;file_path&amp;#125;/$&amp;#123;file_base_name&amp;#125;&amp;quot;, &amp;quot;&amp;amp;start&amp;quot;, &amp;quot;cmd&amp;quot;, &amp;quot;/c&amp;quot;, &amp;quot;$&amp;#123;file_path&amp;#125;/$&amp;#123;file_base_name&amp;#125;.exe &amp;amp;echo. &amp;amp;pause&amp;quot;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Other" scheme="http://blog.alanice.cn/categories/Other/"/>
    
    
  </entry>
  
  <entry>
    <title>CentOS 开发环境配置</title>
    <link href="http://blog.alanice.cn/2017/06/01/37bc801c-f724-4136-a888-20679096101e/"/>
    <id>http://blog.alanice.cn/2017/06/01/37bc801c-f724-4136-a888-20679096101e/</id>
    <published>2017-06-01T10:00:00.000Z</published>
    <updated>2017-06-01T10:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="编译安装python3-4"><a href="#编译安装python3-4" class="headerlink" title="编译安装python3.4"></a>编译安装python3.4</h2><p>Centos上面默认的Python版本是2.6，本文介绍如何安装3.6版本。</p><h3 id="下载前准备"><a href="#下载前准备" class="headerlink" title="下载前准备"></a>下载前准备</h3><p>需要安装以下库，不然会有问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make</div></pre></td></tr></table></figure><a id="more"></a><h3 id="下载Python3-4源码"><a href="#下载Python3-4源码" class="headerlink" title="下载Python3.4源码"></a>下载Python3.4源码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget http://mirrors.sohu.com/python/3.6.1/Python-3.6.1.tar.xz</div></pre></td></tr></table></figure><h3 id="解压缩并安装"><a href="#解压缩并安装" class="headerlink" title="解压缩并安装"></a>解压缩并安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">xz -d Python-3.4.1.tar.xz</div><div class="line">tar xf Python-3.4.1.tar -C /usr/<span class="built_in">local</span>/src/</div><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/src/Python-3.4.1/</div><div class="line">./configure --prefix=/usr/<span class="built_in">local</span>/python34</div><div class="line">make -j8 &amp;&amp; make install</div><div class="line">``` </div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">## 配置vsftpd服务</span></div><div class="line"></div><div class="line"><span class="comment">### 添加ftp用户</span></div><div class="line"></div><div class="line">首先添加ftp用户</div><div class="line"></div><div class="line">假设这里我们添加的用户名字叫ftpuser</div></pre></td></tr></table></figure><h1 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h1><p>useradd -d /home/ftpuser -g ftpuser -s /sbin/nologin ftpuser</p><h1 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h1><p>psswd ftpuser<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">### 配置文件</div><div class="line"></div><div class="line">最后贴一下我的配置文件，怕下次重新配置服务器ftp的时候又有问题</div></pre></td></tr></table></figure><p></p><h1 id="Example-config-file-etc-vsftpd-vsftpd-conf"><a href="#Example-config-file-etc-vsftpd-vsftpd-conf" class="headerlink" title="Example config file /etc/vsftpd/vsftpd.conf"></a>Example config file /etc/vsftpd/vsftpd.conf</h1><p>#</p><h1 id="The-default-compiled-in-settings-are-fairly-paranoid-This-sample-file"><a href="#The-default-compiled-in-settings-are-fairly-paranoid-This-sample-file" class="headerlink" title="The default compiled in settings are fairly paranoid. This sample file"></a>The default compiled in settings are fairly paranoid. This sample file</h1><h1 id="loosens-things-up-a-bit-to-make-the-ftp-daemon-more-usable"><a href="#loosens-things-up-a-bit-to-make-the-ftp-daemon-more-usable" class="headerlink" title="loosens things up a bit, to make the ftp daemon more usable."></a>loosens things up a bit, to make the ftp daemon more usable.</h1><h1 id="Please-see-vsftpd-conf-5-for-all-compiled-in-defaults"><a href="#Please-see-vsftpd-conf-5-for-all-compiled-in-defaults" class="headerlink" title="Please see vsftpd.conf.5 for all compiled in defaults."></a>Please see vsftpd.conf.5 for all compiled in defaults.</h1><p>#</p><h1 id="READ-THIS-This-example-file-is-NOT-an-exhaustive-list-of-vsftpd-options"><a href="#READ-THIS-This-example-file-is-NOT-an-exhaustive-list-of-vsftpd-options" class="headerlink" title="READ THIS: This example file is NOT an exhaustive list of vsftpd options."></a>READ THIS: This example file is NOT an exhaustive list of vsftpd options.</h1><h1 id="Please-read-the-vsftpd-conf-5-manual-page-to-get-a-full-idea-of-vsftpd’s"><a href="#Please-read-the-vsftpd-conf-5-manual-page-to-get-a-full-idea-of-vsftpd’s" class="headerlink" title="Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd’s"></a>Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd’s</h1><h1 id="capabilities"><a href="#capabilities" class="headerlink" title="capabilities."></a>capabilities.</h1><p>#</p><h1 id="Allow-anonymous-FTP-Beware-allowed-by-default-if-you-comment-this-out"><a href="#Allow-anonymous-FTP-Beware-allowed-by-default-if-you-comment-this-out" class="headerlink" title="Allow anonymous FTP? (Beware - allowed by default if you comment this out)."></a>Allow anonymous FTP? (Beware - allowed by default if you comment this out).</h1><p>anonymous_enable=NO<br>#</p><h1 id="Uncomment-this-to-allow-local-users-to-log-in"><a href="#Uncomment-this-to-allow-local-users-to-log-in" class="headerlink" title="Uncomment this to allow local users to log in."></a>Uncomment this to allow local users to log in.</h1><h1 id="When-SELinux-is-enforcing-check-for-SE-bool-ftp-home-dir"><a href="#When-SELinux-is-enforcing-check-for-SE-bool-ftp-home-dir" class="headerlink" title="When SELinux is enforcing check for SE bool ftp_home_dir"></a>When SELinux is enforcing check for SE bool ftp_home_dir</h1><p>local_enable=YES<br>#</p><h1 id="Uncomment-this-to-enable-any-form-of-FTP-write-command"><a href="#Uncomment-this-to-enable-any-form-of-FTP-write-command" class="headerlink" title="Uncomment this to enable any form of FTP write command."></a>Uncomment this to enable any form of FTP write command.</h1><p>write_enable=YES<br>#</p><h1 id="Default-umask-for-local-users-is-077-You-may-wish-to-change-this-to-022"><a href="#Default-umask-for-local-users-is-077-You-may-wish-to-change-this-to-022" class="headerlink" title="Default umask for local users is 077. You may wish to change this to 022,"></a>Default umask for local users is 077. You may wish to change this to 022,</h1><h1 id="if-your-users-expect-that-022-is-used-by-most-other-ftpd’s"><a href="#if-your-users-expect-that-022-is-used-by-most-other-ftpd’s" class="headerlink" title="if your users expect that (022 is used by most other ftpd’s)"></a>if your users expect that (022 is used by most other ftpd’s)</h1><p>local_umask=022<br>#</p><h1 id="Uncomment-this-to-allow-the-anonymous-FTP-user-to-upload-files-This-only"><a href="#Uncomment-this-to-allow-the-anonymous-FTP-user-to-upload-files-This-only" class="headerlink" title="Uncomment this to allow the anonymous FTP user to upload files. This only"></a>Uncomment this to allow the anonymous FTP user to upload files. This only</h1><h1 id="has-an-effect-if-the-above-global-write-enable-is-activated-Also-you-will"><a href="#has-an-effect-if-the-above-global-write-enable-is-activated-Also-you-will" class="headerlink" title="has an effect if the above global write enable is activated. Also, you will"></a>has an effect if the above global write enable is activated. Also, you will</h1><h1 id="obviously-need-to-create-a-directory-writable-by-the-FTP-user"><a href="#obviously-need-to-create-a-directory-writable-by-the-FTP-user" class="headerlink" title="obviously need to create a directory writable by the FTP user."></a>obviously need to create a directory writable by the FTP user.</h1><h1 id="When-SELinux-is-enforcing-check-for-SE-bool-allow-ftpd-anon-write-allow-ftpd-full-access"><a href="#When-SELinux-is-enforcing-check-for-SE-bool-allow-ftpd-anon-write-allow-ftpd-full-access" class="headerlink" title="When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access"></a>When SELinux is enforcing check for SE bool allow_ftpd_anon_write, allow_ftpd_full_access</h1><p>#anon_upload_enable=YES<br>#</p><h1 id="Uncomment-this-if-you-want-the-anonymous-FTP-user-to-be-able-to-create"><a href="#Uncomment-this-if-you-want-the-anonymous-FTP-user-to-be-able-to-create" class="headerlink" title="Uncomment this if you want the anonymous FTP user to be able to create"></a>Uncomment this if you want the anonymous FTP user to be able to create</h1><h1 id="new-directories"><a href="#new-directories" class="headerlink" title="new directories."></a>new directories.</h1><p>#anon_mkdir_write_enable=YES<br>#</p><h1 id="Activate-directory-messages-messages-given-to-remote-users-when-they"><a href="#Activate-directory-messages-messages-given-to-remote-users-when-they" class="headerlink" title="Activate directory messages - messages given to remote users when they"></a>Activate directory messages - messages given to remote users when they</h1><h1 id="go-into-a-certain-directory"><a href="#go-into-a-certain-directory" class="headerlink" title="go into a certain directory."></a>go into a certain directory.</h1><p>dirmessage_enable=YES<br>#</p><h1 id="Activate-logging-of-uploads-downloads"><a href="#Activate-logging-of-uploads-downloads" class="headerlink" title="Activate logging of uploads/downloads."></a>Activate logging of uploads/downloads.</h1><p>xferlog_enable=YES<br>#</p><h1 id="Make-sure-PORT-transfer-connections-originate-from-port-20-ftp-data"><a href="#Make-sure-PORT-transfer-connections-originate-from-port-20-ftp-data" class="headerlink" title="Make sure PORT transfer connections originate from port 20 (ftp-data)."></a>Make sure PORT transfer connections originate from port 20 (ftp-data).</h1><p>connect_from_port_20=YES<br>#</p><h1 id="If-you-want-you-can-arrange-for-uploaded-anonymous-files-to-be-owned-by"><a href="#If-you-want-you-can-arrange-for-uploaded-anonymous-files-to-be-owned-by" class="headerlink" title="If you want, you can arrange for uploaded anonymous files to be owned by"></a>If you want, you can arrange for uploaded anonymous files to be owned by</h1><h1 id="a-different-user-Note-Using-“root”-for-uploaded-files-is-not"><a href="#a-different-user-Note-Using-“root”-for-uploaded-files-is-not" class="headerlink" title="a different user. Note! Using “root” for uploaded files is not"></a>a different user. Note! Using “root” for uploaded files is not</h1><h1 id="recommended"><a href="#recommended" class="headerlink" title="recommended!"></a>recommended!</h1><p>#chown_uploads=YES</p><p>#chown_username=whoever<br>#</p><h1 id="You-may-override-where-the-log-file-goes-if-you-like-The-default-is-shown"><a href="#You-may-override-where-the-log-file-goes-if-you-like-The-default-is-shown" class="headerlink" title="You may override where the log file goes if you like. The default is shown"></a>You may override where the log file goes if you like. The default is shown</h1><h1 id="below"><a href="#below" class="headerlink" title="below."></a>below.</h1><p>#xferlog_file=/var/log/xferlog<br>#</p><h1 id="If-you-want-you-can-have-your-log-file-in-standard-ftpd-xferlog-format"><a href="#If-you-want-you-can-have-your-log-file-in-standard-ftpd-xferlog-format" class="headerlink" title="If you want, you can have your log file in standard ftpd xferlog format."></a>If you want, you can have your log file in standard ftpd xferlog format.</h1><h1 id="Note-that-the-default-log-file-location-is-var-log-xferlog-in-this-case"><a href="#Note-that-the-default-log-file-location-is-var-log-xferlog-in-this-case" class="headerlink" title="Note that the default log file location is /var/log/xferlog in this case."></a>Note that the default log file location is /var/log/xferlog in this case.</h1><p>xferlog_std_format=YES<br>#</p><h1 id="You-may-change-the-default-value-for-timing-out-an-idle-session"><a href="#You-may-change-the-default-value-for-timing-out-an-idle-session" class="headerlink" title="You may change the default value for timing out an idle session."></a>You may change the default value for timing out an idle session.</h1><p>#idle_session_timeout=600<br>#</p><h1 id="You-may-change-the-default-value-for-timing-out-a-data-connection"><a href="#You-may-change-the-default-value-for-timing-out-a-data-connection" class="headerlink" title="You may change the default value for timing out a data connection."></a>You may change the default value for timing out a data connection.</h1><p>#data_connection_timeout=120<br>#</p><h1 id="It-is-recommended-that-you-define-on-your-system-a-unique-user-which-the"><a href="#It-is-recommended-that-you-define-on-your-system-a-unique-user-which-the" class="headerlink" title="It is recommended that you define on your system a unique user which the"></a>It is recommended that you define on your system a unique user which the</h1><h1 id="ftp-server-can-use-as-a-totally-isolated-and-unprivileged-user"><a href="#ftp-server-can-use-as-a-totally-isolated-and-unprivileged-user" class="headerlink" title="ftp server can use as a totally isolated and unprivileged user."></a>ftp server can use as a totally isolated and unprivileged user.</h1><p>#nopriv_user=ftpsecure<br>#</p><h1 id="Enable-this-and-the-server-will-recognise-asynchronous-ABOR-requests-Not"><a href="#Enable-this-and-the-server-will-recognise-asynchronous-ABOR-requests-Not" class="headerlink" title="Enable this and the server will recognise asynchronous ABOR requests. Not"></a>Enable this and the server will recognise asynchronous ABOR requests. Not</h1><h1 id="recommended-for-security-the-code-is-non-trivial-Not-enabling-it"><a href="#recommended-for-security-the-code-is-non-trivial-Not-enabling-it" class="headerlink" title="recommended for security (the code is non-trivial). Not enabling it,"></a>recommended for security (the code is non-trivial). Not enabling it,</h1><h1 id="however-may-confuse-older-FTP-clients"><a href="#however-may-confuse-older-FTP-clients" class="headerlink" title="however, may confuse older FTP clients."></a>however, may confuse older FTP clients.</h1><p>#async_abor_enable=YES<br>#</p><h1 id="By-default-the-server-will-pretend-to-allow-ASCII-mode-but-in-fact-ignore"><a href="#By-default-the-server-will-pretend-to-allow-ASCII-mode-but-in-fact-ignore" class="headerlink" title="By default the server will pretend to allow ASCII mode but in fact ignore"></a>By default the server will pretend to allow ASCII mode but in fact ignore</h1><h1 id="the-request-Turn-on-the-below-options-to-have-the-server-actually-do-ASCII"><a href="#the-request-Turn-on-the-below-options-to-have-the-server-actually-do-ASCII" class="headerlink" title="the request. Turn on the below options to have the server actually do ASCII"></a>the request. Turn on the below options to have the server actually do ASCII</h1><h1 id="mangling-on-files-when-in-ASCII-mode"><a href="#mangling-on-files-when-in-ASCII-mode" class="headerlink" title="mangling on files when in ASCII mode."></a>mangling on files when in ASCII mode.</h1><h1 id="Beware-that-on-some-FTP-servers-ASCII-support-allows-a-denial-of-service"><a href="#Beware-that-on-some-FTP-servers-ASCII-support-allows-a-denial-of-service" class="headerlink" title="Beware that on some FTP servers, ASCII support allows a denial of service"></a>Beware that on some FTP servers, ASCII support allows a denial of service</h1><h1 id="attack-DoS-via-the-command-“SIZE-big-file”-in-ASCII-mode-vsftpd"><a href="#attack-DoS-via-the-command-“SIZE-big-file”-in-ASCII-mode-vsftpd" class="headerlink" title="attack (DoS) via the command “SIZE /big/file” in ASCII mode. vsftpd"></a>attack (DoS) via the command “SIZE /big/file” in ASCII mode. vsftpd</h1><h1 id="predicted-this-attack-and-has-always-been-safe-reporting-the-size-of-the"><a href="#predicted-this-attack-and-has-always-been-safe-reporting-the-size-of-the" class="headerlink" title="predicted this attack and has always been safe, reporting the size of the"></a>predicted this attack and has always been safe, reporting the size of the</h1><h1 id="raw-file"><a href="#raw-file" class="headerlink" title="raw file."></a>raw file.</h1><h1 id="ASCII-mangling-is-a-horrible-feature-of-the-protocol"><a href="#ASCII-mangling-is-a-horrible-feature-of-the-protocol" class="headerlink" title="ASCII mangling is a horrible feature of the protocol."></a>ASCII mangling is a horrible feature of the protocol.</h1><p>#ascii_upload_enable=YES</p><p>#ascii_download_enable=YES<br>#</p><h1 id="You-may-fully-customise-the-login-banner-string"><a href="#You-may-fully-customise-the-login-banner-string" class="headerlink" title="You may fully customise the login banner string:"></a>You may fully customise the login banner string:</h1><p>#ftpd_banner=Welcome to blah FTP service.<br>#</p><h1 id="You-may-specify-a-file-of-disallowed-anonymous-e-mail-addresses-Apparently"><a href="#You-may-specify-a-file-of-disallowed-anonymous-e-mail-addresses-Apparently" class="headerlink" title="You may specify a file of disallowed anonymous e-mail addresses. Apparently"></a>You may specify a file of disallowed anonymous e-mail addresses. Apparently</h1><h1 id="useful-for-combatting-certain-DoS-attacks"><a href="#useful-for-combatting-certain-DoS-attacks" class="headerlink" title="useful for combatting certain DoS attacks."></a>useful for combatting certain DoS attacks.</h1><p>#deny_email_enable=YES</p><h1 id="default-follows"><a href="#default-follows" class="headerlink" title="(default follows)"></a>(default follows)</h1><p>#banned_email_file=/etc/vsftpd/banned_emails<br>#</p><h1 id="You-may-specify-an-explicit-list-of-local-users-to-chroot-to-their-home"><a href="#You-may-specify-an-explicit-list-of-local-users-to-chroot-to-their-home" class="headerlink" title="You may specify an explicit list of local users to chroot() to their home"></a>You may specify an explicit list of local users to chroot() to their home</h1><h1 id="directory-If-chroot-local-user-is-YES-then-this-list-becomes-a-list-of"><a href="#directory-If-chroot-local-user-is-YES-then-this-list-becomes-a-list-of" class="headerlink" title="directory. If chroot_local_user is YES, then this list becomes a list of"></a>directory. If chroot_local_user is YES, then this list becomes a list of</h1><h1 id="users-to-NOT-chroot"><a href="#users-to-NOT-chroot" class="headerlink" title="users to NOT chroot()."></a>users to NOT chroot().</h1><h1 id="Warning-chroot’ing-can-be-very-dangerous-If-using-chroot-make-sure-that"><a href="#Warning-chroot’ing-can-be-very-dangerous-If-using-chroot-make-sure-that" class="headerlink" title="(Warning! chroot’ing can be very dangerous. If using chroot, make sure that"></a>(Warning! chroot’ing can be very dangerous. If using chroot, make sure that</h1><h1 id="the-user-does-not-have-write-access-to-the-top-level-directory-within-the"><a href="#the-user-does-not-have-write-access-to-the-top-level-directory-within-the" class="headerlink" title="the user does not have write access to the top level directory within the"></a>the user does not have write access to the top level directory within the</h1><h1 id="chroot"><a href="#chroot" class="headerlink" title="chroot)"></a>chroot)</h1><p>chroot_local_user=YES</p><p>#chroot_list_enable=YES</p><h1 id="default-follows-1"><a href="#default-follows-1" class="headerlink" title="(default follows)"></a>(default follows)</h1><p>#chroot_list_file=/etc/vsftpd/chroot_list<br>#</p><h1 id="You-may-activate-the-“-R”-option-to-the-builtin-ls-This-is-disabled-by"><a href="#You-may-activate-the-“-R”-option-to-the-builtin-ls-This-is-disabled-by" class="headerlink" title="You may activate the “-R” option to the builtin ls. This is disabled by"></a>You may activate the “-R” option to the builtin ls. This is disabled by</h1><h1 id="default-to-avoid-remote-users-being-able-to-cause-excessive-I-O-on-large"><a href="#default-to-avoid-remote-users-being-able-to-cause-excessive-I-O-on-large" class="headerlink" title="default to avoid remote users being able to cause excessive I/O on large"></a>default to avoid remote users being able to cause excessive I/O on large</h1><h1 id="sites-However-some-broken-FTP-clients-such-as-“ncftp”-and-“mirror”-assume"><a href="#sites-However-some-broken-FTP-clients-such-as-“ncftp”-and-“mirror”-assume" class="headerlink" title="sites. However, some broken FTP clients such as “ncftp” and “mirror” assume"></a>sites. However, some broken FTP clients such as “ncftp” and “mirror” assume</h1><h1 id="the-presence-of-the-“-R”-option-so-there-is-a-strong-case-for-enabling-it"><a href="#the-presence-of-the-“-R”-option-so-there-is-a-strong-case-for-enabling-it" class="headerlink" title="the presence of the “-R” option, so there is a strong case for enabling it."></a>the presence of the “-R” option, so there is a strong case for enabling it.</h1><p>#ls_recurse_enable=YES<br>#</p><h1 id="When-“listen”-directive-is-enabled-vsftpd-runs-in-standalone-mode-and"><a href="#When-“listen”-directive-is-enabled-vsftpd-runs-in-standalone-mode-and" class="headerlink" title="When “listen” directive is enabled, vsftpd runs in standalone mode and"></a>When “listen” directive is enabled, vsftpd runs in standalone mode and</h1><h1 id="listens-on-IPv4-sockets-This-directive-cannot-be-used-in-conjunction"><a href="#listens-on-IPv4-sockets-This-directive-cannot-be-used-in-conjunction" class="headerlink" title="listens on IPv4 sockets. This directive cannot be used in conjunction"></a>listens on IPv4 sockets. This directive cannot be used in conjunction</h1><h1 id="with-the-listen-ipv6-directive"><a href="#with-the-listen-ipv6-directive" class="headerlink" title="with the listen_ipv6 directive."></a>with the listen_ipv6 directive.</h1><p>listen=NO<br>#</p><h1 id="This-directive-enables-listening-on-IPv6-sockets-By-default-listening"><a href="#This-directive-enables-listening-on-IPv6-sockets-By-default-listening" class="headerlink" title="This directive enables listening on IPv6 sockets. By default, listening"></a>This directive enables listening on IPv6 sockets. By default, listening</h1><h1 id="on-the-IPv6-“any”-address-will-accept-connections-from-both-IPv6"><a href="#on-the-IPv6-“any”-address-will-accept-connections-from-both-IPv6" class="headerlink" title="on the IPv6 “any” address (::) will accept connections from both IPv6"></a>on the IPv6 “any” address (::) will accept connections from both IPv6</h1><h1 id="and-IPv4-clients-It-is-not-necessary-to-listen-on-both-IPv4-and-IPv6"><a href="#and-IPv4-clients-It-is-not-necessary-to-listen-on-both-IPv4-and-IPv6" class="headerlink" title="and IPv4 clients. It is not necessary to listen on _both_ IPv4 and IPv6"></a>and IPv4 clients. It is not necessary to listen on _both_ IPv4 and IPv6</h1><h1 id="sockets-If-you-want-that-perhaps-because-you-want-to-listen-on-specific"><a href="#sockets-If-you-want-that-perhaps-because-you-want-to-listen-on-specific" class="headerlink" title="sockets. If you want that (perhaps because you want to listen on specific"></a>sockets. If you want that (perhaps because you want to listen on specific</h1><h1 id="addresses-then-you-must-run-two-copies-of-vsftpd-with-two-configuration"><a href="#addresses-then-you-must-run-two-copies-of-vsftpd-with-two-configuration" class="headerlink" title="addresses) then you must run two copies of vsftpd with two configuration"></a>addresses) then you must run two copies of vsftpd with two configuration</h1><h1 id="files"><a href="#files" class="headerlink" title="files."></a>files.</h1><h1 id="Make-sure-that-one-of-the-listen-options-is-commented"><a href="#Make-sure-that-one-of-the-listen-options-is-commented" class="headerlink" title="Make sure, that one of the listen options is commented !!"></a>Make sure, that one of the listen options is commented !!</h1><p>listen_ipv6=YES<br>pam_service_name=vsftpd<br>userlist_enable=YES<br>tcp_wrappers=YES<br>allow_writeable_chroot=YES<br>```</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;编译安装python3-4&quot;&gt;&lt;a href=&quot;#编译安装python3-4&quot; class=&quot;headerlink&quot; title=&quot;编译安装python3.4&quot;&gt;&lt;/a&gt;编译安装python3.4&lt;/h2&gt;&lt;p&gt;Centos上面默认的Python版本是2.6，本文介绍如何安装3.6版本。&lt;/p&gt;&lt;h3 id=&quot;下载前准备&quot;&gt;&lt;a href=&quot;#下载前准备&quot; class=&quot;headerlink&quot; title=&quot;下载前准备&quot;&gt;&lt;/a&gt;下载前准备&lt;/h3&gt;&lt;p&gt;需要安装以下库，不然会有问题。&lt;/p&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gcc make&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.alanice.cn/categories/Linux/"/>
    
    
      <category term="CentOS" scheme="http://blog.alanice.cn/tags/CentOS/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu Tips</title>
    <link href="http://blog.alanice.cn/2017/06/01/22e63bec-2cca-4e1b-aca9-0c890e5444d4/"/>
    <id>http://blog.alanice.cn/2017/06/01/22e63bec-2cca-4e1b-aca9-0c890e5444d4/</id>
    <published>2017-06-01T03:00:00.000Z</published>
    <updated>2017-06-01T03:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="清除Ubuntu的Application缓存"><a href="#清除Ubuntu的Application缓存" class="headerlink" title="清除Ubuntu的Application缓存"></a>清除Ubuntu的Application缓存</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rm ~/.<span class="built_in">local</span>/share/applications/sublime_text.desktop</div></pre></td></tr></table></figure><h2 id="设置RTC时间"><a href="#设置RTC时间" class="headerlink" title="设置RTC时间"></a>设置RTC时间</h2><p>在安装Ubuntu双系统的情况下，Ubuntu的时间总会和Windows的时间相差8小时，原因在于widows认为BIOS时间是本地时间，Ubuntu认为BIOS时间是UTC时间，这样从Ubuntu重启到ubuntu会发现时间相差8小时，Ubuntu会经常与NTP服务器时间进行同步，但Windows不会。</p><p>所以我们需要将Ubuntu的时间改成本地时间，更改方法是执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">timedatectl set-local-rtc 1 --adjust-system-clock</div></pre></td></tr></table></figure><a id="more"></a><h2 id="Ubuntu-boot-分区不足解决方案"><a href="#Ubuntu-boot-分区不足解决方案" class="headerlink" title="Ubuntu /boot 分区不足解决方案"></a>Ubuntu /boot 分区不足解决方案</h2><p><img src="http://ww1.sinaimg.cn/large/7c80419fgy1fgknd5tyy4j20hz05wjrz.jpg" alt=""></p><p>经常升级系统，出现了上图的提示，解决办法：</p><h3 id="查看已安装的linux-image各版本"><a href="#查看已安装的linux-image各版本" class="headerlink" title="查看已安装的linux-image各版本"></a>查看已安装的linux-image各版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dpkg --get-selections | grep linux-image</div></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/7c80419fgy1fgkndf0qjjj20k703qq3j.jpg" alt=""></p><h3 id="查看当前使用的linux-image各版本"><a href="#查看当前使用的linux-image各版本" class="headerlink" title="查看当前使用的linux-image各版本"></a>查看当前使用的linux-image各版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname -a</div></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/7c80419fgy1fgkndsth03j20ka01faa3.jpg" alt=""></p><p>一般使用的都是最新版，但保险起见，确认下。</p><h3 id="卸载linux-image各版本"><a href="#卸载linux-image各版本" class="headerlink" title="卸载linux-image各版本"></a>卸载linux-image各版本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get purge linux-image-4.4.0-75-generic</div></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/7c80419fgy1fgkne1hrcuj20ka090acj.jpg" alt=""></p><p>使用purge卸载4.4.0-75，若使用remove卸载则会有类似4.4.0-75的遗留。</p><h3 id="再次查看已安装的linux-image各版本"><a href="#再次查看已安装的linux-image各版本" class="headerlink" title="再次查看已安装的linux-image各版本"></a>再次查看已安装的linux-image各版本</h3><p>再次运行<code>dpkg --get-selections | grep linux-image</code>查看情况</p><p><img src="http://ww1.sinaimg.cn/large/7c80419fgy1fgkne936y4j20kd01w3yo.jpg" alt=""></p><p>卸载完后可以用df命令看下boot分区的空间使用情况。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df -h</div></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/7c80419fgy1fgknehh5kqj20k905qq3u.jpg" alt=""></p><h3 id="善后工作"><a href="#善后工作" class="headerlink" title="善后工作"></a>善后工作</h3><p>对于图中因使用remove命令而残留的deinstall的，使用<code>sudo dpkg -P linux-image-extra-4.4.0-75-generic</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;清除Ubuntu的Application缓存&quot;&gt;&lt;a href=&quot;#清除Ubuntu的Application缓存&quot; class=&quot;headerlink&quot; title=&quot;清除Ubuntu的Application缓存&quot;&gt;&lt;/a&gt;清除Ubuntu的Application缓存&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;rm ~/.&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/share/applications/sublime_text.desktop&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h2 id=&quot;设置RTC时间&quot;&gt;&lt;a href=&quot;#设置RTC时间&quot; class=&quot;headerlink&quot; title=&quot;设置RTC时间&quot;&gt;&lt;/a&gt;设置RTC时间&lt;/h2&gt;&lt;p&gt;在安装Ubuntu双系统的情况下，Ubuntu的时间总会和Windows的时间相差8小时，原因在于widows认为BIOS时间是本地时间，Ubuntu认为BIOS时间是UTC时间，这样从Ubuntu重启到ubuntu会发现时间相差8小时，Ubuntu会经常与NTP服务器时间进行同步，但Windows不会。&lt;/p&gt;&lt;p&gt;所以我们需要将Ubuntu的时间改成本地时间，更改方法是执行&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;timedatectl set-local-rtc 1 --adjust-system-clock&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.alanice.cn/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="http://blog.alanice.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu开发环境配置</title>
    <link href="http://blog.alanice.cn/2017/06/01/03c60658-1ecf-40b9-94da-8c1cf7f496f0/"/>
    <id>http://blog.alanice.cn/2017/06/01/03c60658-1ecf-40b9-94da-8c1cf7f496f0/</id>
    <published>2017-06-01T00:00:00.000Z</published>
    <updated>2017-06-01T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="编译安装gcc6-2-0"><a href="#编译安装gcc6-2-0" class="headerlink" title="编译安装gcc6.2.0"></a>编译安装gcc6.2.0</h2><p>在archlinx的下gcc已经更新到6.2.1了，win10的WSL下还是gcc4.8。官方源没有比较新的版本，于是自己编译使用。<br>GCC6的几个新特性</p><p>GCC 6 现在的默认值是 C++ 14. GCC 6 现在包括 C++ Concepts.</p><p>C++运行时库现在支持特殊的数学函数 (ISO/IEC 29124:2010)</p><p>支持 C++17 的实验功能</p><a id="more"></a><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>可以去gnu官网下载gcc6.2.0的源码，但国内访问速度比较慢。可以进中科大的镜像站去下载。</p><p>下载并解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget http://mirrors.ustc.edu.cn/gnu/gcc/gcc-6.2.0/gcc-6.2.0.tar.bz2</div><div class="line">tar -xjvf gcc-6.2.0.tar.bz2</div></pre></td></tr></table></figure><p>解压之后进入源码目录，运行下面命令下载依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./contrib/download_prerequisites <span class="comment">#必须在源码根目录下运行此命令</span></div></pre></td></tr></table></figure><p>编译gcc前需安装<code>build-essential</code>,<code>bison</code>,<code>flex</code>,<code>texinfo</code>。</p><h3 id="生成Makefile"><a href="#生成Makefile" class="headerlink" title="生成Makefile"></a>生成Makefile</h3><p>在源码目录下建立一个build目录(也可以在别的目录下)，然后进入build目录运行configure脚本生成Makefile文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mkdir build &amp;&amp; <span class="built_in">cd</span> build</div><div class="line">../configure --prefix=/usr/<span class="built_in">local</span>/gcc6 --<span class="built_in">enable</span>-checking=release --<span class="built_in">enable</span>-languages=c,c++ --<span class="built_in">enable</span>-threads=posix --<span class="built_in">disable</span>-multilib</div><div class="line"><span class="comment"># --prefix=/usr/local/gcc6  指定安装路径</span></div><div class="line"><span class="comment"># --enable-languages=c,c++  支持的编程语言</span></div><div class="line"><span class="comment"># --enable-threads=posix    使用POSIX/Unix98作为线程支持库</span></div><div class="line"><span class="comment"># --disable-multilib        取消多目标库编译(取消32位库编译)</span></div></pre></td></tr></table></figure><p>下面是archlinux自带gcc的编译配置命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">--prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=https://bugs.archlinux.org/ --<span class="built_in">enable</span>-languages=c,c++,ada,fortran,go,lto,objc,obj-c++ --<span class="built_in">enable</span>-shared --<span class="built_in">enable</span>-threads=posix --<span class="built_in">enable</span>-libmpx --with-system-zlib --with-isl --<span class="built_in">enable</span>-__cxa_atexit --<span class="built_in">disable</span>-libunwind-exceptions --<span class="built_in">enable</span>-clocale=gnu --<span class="built_in">disable</span>-libstdcxx-pch --<span class="built_in">disable</span>-libssp --<span class="built_in">enable</span>-gnu-unique-object --<span class="built_in">enable</span>-linker-build-id --<span class="built_in">enable</span>-lto --<span class="built_in">enable</span>-plugin --<span class="built_in">enable</span>-install-libiberty --with-linker-hash-style=gnu --<span class="built_in">enable</span>-gnu-indirect-function --<span class="built_in">disable</span>-multilib --<span class="built_in">disable</span>-werror --<span class="built_in">enable</span>-checking=release</div></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><p>上一步生成Makefile没有问题后，就可以直接编译安装了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make -j8        <span class="comment">#使用8个线程并行编译</span></div><div class="line">make install    <span class="comment">#安装(可能需要root权限)</span></div></pre></td></tr></table></figure><h3 id="生成软链接"><a href="#生成软链接" class="headerlink" title="生成软链接"></a>生成软链接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/bin</div><div class="line">ln -s /usr/<span class="built_in">local</span>/gcc6/bin/gcc gcc6</div></pre></td></tr></table></figure><h2 id="Ubuntu16-04编译安装Python3-6"><a href="#Ubuntu16-04编译安装Python3-6" class="headerlink" title="Ubuntu16.04编译安装Python3.6"></a>Ubuntu16.04编译安装Python3.6</h2><h3 id="安装tcl-tk和Tkinter"><a href="#安装tcl-tk和Tkinter" class="headerlink" title="安装tcl/tk和Tkinter"></a>安装tcl/tk和Tkinter</h3><p>tcl和tk的下载地址：<a href="https://sourceforge.net/projects/tcl/files/Tcl/" target="_blank" rel="external">https://sourceforge.net/projects/tcl/files/Tcl/</a></p><p>目前我下载的tcl/tk源代码包是 <code>tcl8.6.6-src.tar.gz</code> 和 <code>tk8.6.6-src.tar.gz</code></p><p>安装tcl8.6：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">tar -xzvf tcl8.6.6-src.tar.gz  </div><div class="line"><span class="built_in">cd</span> tcl8.6.6/unix</div><div class="line">./configure</div><div class="line">make</div><div class="line">sudo make install</div></pre></td></tr></table></figure><p>安装tk8.6（与tcl8.6的安装相似）:</p><p>编译时如果出现以下错误信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">/home/alan/Downloads/tk8.6.6/unix/../generic/tk.h:96:25: 致命错误： X11/Xlib.h：没有那个文件或目录  </div><div class="line">编译中断。</div><div class="line">make: *** [tk3d.o] 错误 1</div></pre></td></tr></table></figure><p>那么说明x11库依赖缺失，在终端运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libx11-dev</div></pre></td></tr></table></figure><p>之后修改Setup.dist文件，进入python安装包解压后那个文件夹里， 命令打开Setup.dist文件<code>vim Modules/Setup.dist</code></p><p>修改上面5处地方， 把她们前面的＃删除掉， 默认的tcl和tk是8.2, 但是我们已经安装的tcl和tk的版本是8.6, 那么我们就将这里的tk8.3和tcl8.2修改为tk8.6和tcl8.6, 保存退出。</p><p><img src="http://ww1.sinaimg.cn/large/7c80419fgy1fgkncniha3j20qf0h2q6m.jpg" alt=""></p><h3 id="配置ssl模块"><a href="#配置ssl模块" class="headerlink" title="配置ssl模块"></a>配置ssl模块</h3><p>安装SSL相关的依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get install openssl</div><div class="line">apt-get libssl-dev</div></pre></td></tr></table></figure><p>修改Setup.dist文件</p><p><img src="http://ww1.sinaimg.cn/large/7c80419fgy1fhvzb69fz7j20st04ywf5.jpg" alt=""></p><h3 id="编译安装-1"><a href="#编译安装-1" class="headerlink" title="编译安装"></a>编译安装</h3><p>现在重装python3.6.0， 用以下命令一次性完成配置、编译、安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">./configure</div><div class="line">make</div><div class="line">sudo make install</div></pre></td></tr></table></figure><h2 id="deb包安装MySQL"><a href="#deb包安装MySQL" class="headerlink" title="deb包安装MySQL"></a>deb包安装MySQL</h2><p>Ubuntu下如果apt-get安装MySQL的话，仓库版本可能比较陈旧，所以我选择从官网下载deb包安装最新的MySQL</p><h3 id="下载MySQL"><a href="#下载MySQL" class="headerlink" title="下载MySQL"></a>下载MySQL</h3><p>到mysql网站下载相应的mysql安装包，我的mysql-server_5.7.17-1ubuntu16.04_amd64.deb-bundle.tar</p><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tar -xvf mysql-server_5.7.17-1ubuntu16.04_amd64.deb-bundle.tar</div></pre></td></tr></table></figure><p>得到以下文件：</p><div class="div-border left-blue no-indent">libmysqlclient20_5.7.17-1ubuntu16.04_amd64.deb<br>libmysqlclient-dev_5.7.17-1ubuntu16.04_amd64.deb<br>libmysqld-dev_5.7.17-1ubuntu16.04_amd64.deb<br>mysql-client_5.7.17-1ubuntu16.04_amd64.deb<br>mysql-common_5.7.17-1ubuntu16.04_amd64.deb<br>mysql-community_5.7.17-1ubuntu16.04_amd64.changes<br>mysql-community-client_5.7.17-1ubuntu16.04_amd64.deb<br>mysql-community-server_5.7.17-1ubuntu16.04_amd64.deb<br>mysql-community-source_5.7.17-1ubuntu16.04_amd64.deb<br>mysql-community-test_5.7.17-1ubuntu16.04_amd64.deb<br>mysql-server_5.7.17-1ubuntu16.04_amd64.deb<br>mysql-server_5.7.17-1ubuntu16.04_amd64.deb-bundle.tar<br>mysql-testsuite_5.7.17-1ubuntu16.04_amd64.debsan<br></div><h3 id="安装所需的包"><a href="#安装所需的包" class="headerlink" title="安装所需的包"></a>安装所需的包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">sudo dpkg -i mysql-common_5.7.16-1ubuntu16.04_amd64.deb</div><div class="line">sudo dpkg-preconfigure mysql-community-server_5.7.16-1ubuntu16.04_amd64.deb</div><div class="line">sudo dpkg -i libmysqlclient20_5.7.16-1ubuntu16.04_amd64.deb</div><div class="line">sudo dpkg -i libmysqlclient-dev_5.7.16-1ubuntu16.04_amd64.deb</div><div class="line">sudo dpkg -i libmysqld-dev_5.7.16-1ubuntu16.04_amd64.deb</div><div class="line">sudo apt-get install libaio1</div><div class="line">sudo dpkg -i mysql-community-client_5.7.16-1ubuntu16.04_amd64.deb </div><div class="line">sudo dpkg -i mysql-client_5.7.16-1ubuntu16.04_amd64.deb</div><div class="line">sudo dpkg -i mysql-common_5.7.16-1ubuntu16.04_amd64.deb</div><div class="line">sudo apt-get install libmecab2</div><div class="line">sudo dpkg -i mysql-community-server_5.7.16-1ubuntu16.04_amd64.deb</div><div class="line">sudo dpkg -i mysql-server_5.7.16-1ubuntu16.04_amd64.deb</div></pre></td></tr></table></figure><h2 id="其他库依赖的安装"><a href="#其他库依赖的安装" class="headerlink" title="其他库依赖的安装"></a>其他库依赖的安装</h2><h3 id="安装readline库"><a href="#安装readline库" class="headerlink" title="安装readline库"></a>安装readline库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libreadline-dev</div></pre></td></tr></table></figure><h3 id="安装zlib库"><a href="#安装zlib库" class="headerlink" title="安装zlib库"></a>安装zlib库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install zlib1g-dev</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;编译安装gcc6-2-0&quot;&gt;&lt;a href=&quot;#编译安装gcc6-2-0&quot; class=&quot;headerlink&quot; title=&quot;编译安装gcc6.2.0&quot;&gt;&lt;/a&gt;编译安装gcc6.2.0&lt;/h2&gt;&lt;p&gt;在archlinx的下gcc已经更新到6.2.1了，win10的WSL下还是gcc4.8。官方源没有比较新的版本，于是自己编译使用。&lt;br&gt;GCC6的几个新特性&lt;/p&gt;&lt;p&gt;GCC 6 现在的默认值是 C++ 14. GCC 6 现在包括 C++ Concepts.&lt;/p&gt;&lt;p&gt;C++运行时库现在支持特殊的数学函数 (ISO/IEC 29124:2010)&lt;/p&gt;&lt;p&gt;支持 C++17 的实验功能&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.alanice.cn/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="http://blog.alanice.cn/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Python 装饰器</title>
    <link href="http://blog.alanice.cn/2017/05/30/88cf2162-db36-4ac6-a6d0-56fc08d906b3/"/>
    <id>http://blog.alanice.cn/2017/05/30/88cf2162-db36-4ac6-a6d0-56fc08d906b3/</id>
    <published>2017-05-30T00:00:00.000Z</published>
    <updated>2017-05-30T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="装饰器设计模式"><a href="#装饰器设计模式" class="headerlink" title="装饰器设计模式"></a>装饰器设计模式</h2><p>装饰器是一个很著名的设计模式，经常被用于有切面需求的场景，较为经典的有插入日志、性能测试、事务处理等。装饰器是解决这类问题的绝佳设计，有了装饰器，我们就可以抽离出大量函数中与函数功能本身无关的雷同代码并继续重用。概括的讲，装饰器的作用就是为已经存在的对象添加额外的功能。</p><p>在Python中，使用@语法糖修饰一个函数，把@deco放到func()函数的定义处，相当于执行了语句：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">func = deco(func)</div></pre></td></tr></table></figure><a id="more"></a><h2 id="不带参数的装饰器"><a href="#不带参数的装饰器" class="headerlink" title="不带参数的装饰器"></a>不带参数的装饰器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(func)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></div><div class="line">        print(<span class="string">'call %s():'</span> % func.__name__)</div><div class="line">        <span class="keyword">return</span> func(*args, **kw)</div><div class="line">    <span class="keyword">return</span> wrapper</div><div class="line"></div><div class="line"><span class="meta">@log</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">now</span><span class="params">()</span>:</span></div><div class="line">    print(time.strftime(<span class="string">'%Y-%m-%d'</span>,time.localtime(time.time())))</div></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">call now():</div><div class="line">2017-06-19</div></pre></td></tr></table></figure><h2 id="带参数的装饰器"><a href="#带参数的装饰器" class="headerlink" title="带参数的装饰器"></a>带参数的装饰器</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">log</span><span class="params">(text)</span>:</span></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">decorator</span><span class="params">(func)</span>:</span></div><div class="line">        <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kw)</span>:</span></div><div class="line">            print(<span class="string">'%s call %s():'</span> % (text, func.__name__))</div><div class="line">            <span class="keyword">return</span> func(*args, **kw)</div><div class="line">        <span class="keyword">return</span> wrapper</div><div class="line">    <span class="keyword">return</span> decorator</div><div class="line"><span class="meta">@log(‘Alan’)</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">now</span><span class="params">()</span>:</span></div><div class="line">print(time.strftime(‘%Y-%m-%d’,time.localtime(time.time())))</div></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Alan call now():</div><div class="line">2017-06-19</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;装饰器设计模式&quot;&gt;&lt;a href=&quot;#装饰器设计模式&quot; class=&quot;headerlink&quot; title=&quot;装饰器设计模式&quot;&gt;&lt;/a&gt;装饰器设计模式&lt;/h2&gt;&lt;p&gt;装饰器是一个很著名的设计模式，经常被用于有切面需求的场景，较为经典的有插入日志、性能测试、事务处理等。装饰器是解决这类问题的绝佳设计，有了装饰器，我们就可以抽离出大量函数中与函数功能本身无关的雷同代码并继续重用。概括的讲，装饰器的作用就是为已经存在的对象添加额外的功能。&lt;/p&gt;&lt;p&gt;在Python中，使用@语法糖修饰一个函数，把@deco放到func()函数的定义处，相当于执行了语句：&lt;/p&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;func = deco(func)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="http://blog.alanice.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>Python 代码片段</title>
    <link href="http://blog.alanice.cn/2017/05/27/25cea738-3126-404e-bbc7-e53490d81e4c/"/>
    <id>http://blog.alanice.cn/2017/05/27/25cea738-3126-404e-bbc7-e53490d81e4c/</id>
    <published>2017-05-27T00:00:00.000Z</published>
    <updated>2017-05-27T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="从文件获得cookies"><a href="#从文件获得cookies" class="headerlink" title="从文件获得cookies"></a>从文件获得cookies</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cookies=&#123;&#125;</div><div class="line"><span class="keyword">with</span> open(<span class="string">r'cookies.txt'</span>,<span class="string">'r'</span>) <span class="keyword">as</span> f:</div><div class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f.read().split(<span class="string">';'</span>): </div><div class="line">    <span class="comment">#其设置为1就会把字符串拆分成2份 </span></div><div class="line">        name,value = line.strip().split(<span class="string">'='</span>, <span class="number">1</span>) </div><div class="line">        cookies[name] = value</div></pre></td></tr></table></figure><a id="more"></a><h2 id="爬取网页上的图片"><a href="#爬取网页上的图片" class="headerlink" title="爬取网页上的图片"></a>爬取网页上的图片</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> urllib.request</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHtml</span><span class="params">(url)</span>:</span></div><div class="line">    page = urllib.request.urlopen(url)</div><div class="line">    html = page.read().decode(<span class="string">'utf-8'</span>)</div><div class="line">    <span class="keyword">return</span> html</div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">getImg</span><span class="params">(html)</span>:</span></div><div class="line">    reg = <span class="string">r'src="(.+?\.jpg)" width'</span></div><div class="line">    imgre = re.compile(reg)</div><div class="line">    imglist = re.findall(imgre,html)</div><div class="line">    x = <span class="number">0</span></div><div class="line">    <span class="keyword">for</span> imgurl <span class="keyword">in</span> imglist:</div><div class="line">        urllib.request.urlretrieve(imgurl,<span class="string">'images/%s.jpg'</span> % x)</div><div class="line">        x+=<span class="number">1</span></div><div class="line">html = getHtml(<span class="string">'http://tieba.baidu.com/p/741081023'</span>)</div><div class="line">getImg(html)</div></pre></td></tr></table></figure><h2 id="使用pymysql操纵MySQL"><a href="#使用pymysql操纵MySQL" class="headerlink" title="使用pymysql操纵MySQL"></a>使用pymysql操纵MySQL</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pymysql</div><div class="line"><span class="keyword">try</span>:</div><div class="line">    conn= pymysql.connect(host=<span class="string">'localhost'</span>, port=<span class="number">3306</span>, user=<span class="string">'DBSAdmin'</span>, passwd=<span class="string">'admin'</span>, charset=<span class="string">'UTF8'</span>, db=<span class="string">'dbs'</span>)</div><div class="line">    cur=conn.cursor()                              <span class="comment">#获取一个游标对象</span></div><div class="line">    cur.execute(<span class="string">"INSERT INTO nameage VALUES('小明', 15),('小洪', 17),('小高', 16),('小刚', 15)"</span>)<span class="comment">#插入数据</span></div><div class="line">    cur.execute(<span class="string">"SELECT * FROM nameage"</span>)</div><div class="line">    data=cur.fetchall()</div><div class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> data:</div><div class="line">        print(<span class="string">'%s\t%s'</span> %row)</div><div class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</div><div class="line">    print(<span class="string">"发生异常"</span>)</div><div class="line"><span class="keyword">finally</span>:</div><div class="line">    cur.close()                                    <span class="comment">#关闭游标</span></div><div class="line">    conn.commit()                                  <span class="comment">#向数据库中提交任何未解决的事务，对不支持事务的数据库不进行任何操作</span></div><div class="line">    conn.close()                                   <span class="comment">#关闭到数据库的连接，释放数据库资源</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;从文件获得cookies&quot;&gt;&lt;a href=&quot;#从文件获得cookies&quot; class=&quot;headerlink&quot; title=&quot;从文件获得cookies&quot;&gt;&lt;/a&gt;从文件获得cookies&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cookies=&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(&lt;span class=&quot;string&quot;&gt;r&#39;cookies.txt&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;r&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; line &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f.read().split(&lt;span class=&quot;string&quot;&gt;&#39;;&#39;&lt;/span&gt;): &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#其设置为1就会把字符串拆分成2份 &lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        name,value = line.strip().split(&lt;span class=&quot;string&quot;&gt;&#39;=&#39;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        cookies[name] = value&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="http://blog.alanice.cn/categories/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL命令详解</title>
    <link href="http://blog.alanice.cn/2017/05/24/34bca71a-5342-46ae-8e97-eceb2be88545/"/>
    <id>http://blog.alanice.cn/2017/05/24/34bca71a-5342-46ae-8e97-eceb2be88545/</id>
    <published>2017-05-24T04:00:00.000Z</published>
    <updated>2017-05-24T04:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="用户权限类"><a href="#用户权限类" class="headerlink" title="用户权限类"></a>用户权限类</h2><h3 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">GRANT</span> <span class="keyword">privileges</span> <span class="keyword">ON</span> databasename.tablename <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'host'</span>;</div></pre></td></tr></table></figure><p>privileges：用户的操作权限,如<code>SELECT</code>, <code>INSERT</code> , <code>UPDATE</code>等.如果要授予所的权限则使用ALL</p><p>databasename：数据库名</p><p>tablename：表名,如果要授予该用户对所有数据库和表的相应操作权限则可用_表示, 如_.*</p><a id="more"></a><p><strong>注意</strong>：用以上命令授权的用户不能给其它用户授权,如果想让该用户可以授权,用以下命令:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">GRANT</span> <span class="keyword">privileges</span> <span class="keyword">ON</span> databasename.tablename <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'host'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</div></pre></td></tr></table></figure><h3 id="撤销权限"><a href="#撤销权限" class="headerlink" title="撤销权限"></a>撤销权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">REVOKE</span> privilege <span class="keyword">ON</span> databasename.tablename <span class="keyword">FROM</span> <span class="string">'username'</span>@<span class="string">'host'</span>;</div></pre></td></tr></table></figure><h3 id="查看授予的权限"><a href="#查看授予的权限" class="headerlink" title="查看授予的权限"></a>查看授予的权限</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">show</span> <span class="keyword">grants</span> <span class="keyword">for</span> root@<span class="string">'localhost'</span>;</div></pre></td></tr></table></figure><h3 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h3><p>DELETE FROM user Where User=’test’ AND Host=’localhost’;</p><h2 id="表结构变更类"><a href="#表结构变更类" class="headerlink" title="表结构变更类"></a>表结构变更类</h2><h3 id="更改表名"><a href="#更改表名" class="headerlink" title="更改表名"></a>更改表名</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">alter table tablename rename tablenewname;</div><div class="line">``` </div><div class="line"></div><div class="line">### 更改字段类型</div><div class="line"></div><div class="line">``` sql</div><div class="line">alter table tablename modify column columnname typename;</div></pre></td></tr></table></figure><h3 id="更改字段默认值"><a href="#更改字段默认值" class="headerlink" title="更改字段默认值"></a>更改字段默认值</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">alter</span> <span class="keyword">column</span> columnname <span class="keyword">set</span> <span class="keyword">default</span> <span class="string">''</span>;</div></pre></td></tr></table></figure><h3 id="添加字段"><a href="#添加字段" class="headerlink" title="添加字段"></a>添加字段</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">add</span> columnname <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">Null</span>;</div></pre></td></tr></table></figure><h3 id="查看和更改自增字段的值"><a href="#查看和更改自增字段的值" class="headerlink" title="查看和更改自增字段的值"></a>查看和更改自增字段的值</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">select</span> auto_increment <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">'db name'</span> <span class="keyword">and</span> table_name=<span class="string">'table name'</span>;</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename auto_increment=<span class="built_in">NUMBER</span>;;</div></pre></td></tr></table></figure><h2 id="数据存取类"><a href="#数据存取类" class="headerlink" title="数据存取类"></a>数据存取类</h2><h3 id="从数据库里随机读取几条数据"><a href="#从数据库里随机读取几条数据" class="headerlink" title="从数据库里随机读取几条数据"></a>从数据库里随机读取几条数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">table</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">rand</span>() <span class="keyword">limit</span> <span class="number">20</span>;</div></pre></td></tr></table></figure><h3 id="数据库编码类"><a href="#数据库编码类" class="headerlink" title="数据库编码类"></a>数据库编码类</h3><h3 id="创建UTF-8数据库"><a href="#创建UTF-8数据库" class="headerlink" title="创建UTF-8数据库"></a>创建UTF-8数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> dbname <span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;用户权限类&quot;&gt;&lt;a href=&quot;#用户权限类&quot; class=&quot;headerlink&quot; title=&quot;用户权限类&quot;&gt;&lt;/a&gt;用户权限类&lt;/h2&gt;&lt;h3 id=&quot;授予权限&quot;&gt;&lt;a href=&quot;#授予权限&quot; class=&quot;headerlink&quot; title=&quot;授予权限&quot;&gt;&lt;/a&gt;授予权限&lt;/h3&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;privileges&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;ON&lt;/span&gt; databasename.tablename &lt;span class=&quot;keyword&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;username&#39;&lt;/span&gt;@&lt;span class=&quot;string&quot;&gt;&#39;host&#39;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;privileges：用户的操作权限,如&lt;code&gt;SELECT&lt;/code&gt;, &lt;code&gt;INSERT&lt;/code&gt; , &lt;code&gt;UPDATE&lt;/code&gt;等.如果要授予所的权限则使用ALL&lt;/p&gt;&lt;p&gt;databasename：数据库名&lt;/p&gt;&lt;p&gt;tablename：表名,如果要授予该用户对所有数据库和表的相应操作权限则可用_表示, 如_.*&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://blog.alanice.cn/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL密码重置</title>
    <link href="http://blog.alanice.cn/2017/05/24/61f2bf0b-e0f0-4d04-8490-19542beb2eab/"/>
    <id>http://blog.alanice.cn/2017/05/24/61f2bf0b-e0f0-4d04-8490-19542beb2eab/</id>
    <published>2017-05-24T02:00:00.000Z</published>
    <updated>2017-05-24T02:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="停止数据库"><a href="#停止数据库" class="headerlink" title="停止数据库"></a>停止数据库</h2><p>WIndows下CMD执行<code>net stop mysql</code></p><h2 id="修改my-cnf"><a href="#修改my-cnf" class="headerlink" title="修改my.cnf"></a>修改my.cnf</h2><p>利用文本编辑器打开mysql配置文件<code>my.ini/my.cnf</code>,在mysqld进程配置文件中添加<code>skip-grant-tables</code>。</p><a id="more"></a><h2 id="重启数据库"><a href="#重启数据库" class="headerlink" title="重启数据库"></a>重启数据库</h2><p>WIndows下CMD执行<code>net start mysql</code></p><h2 id="修改root密码"><a href="#修改root密码" class="headerlink" title="修改root密码"></a>修改root密码</h2><p>重启数据库后可以不用密码直接登陆，执行mysql -p可以直接登陆进数据库。</p><p>在mysql命令行下执行以下命令修改root密码：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> mysql.user <span class="keyword">set</span> <span class="keyword">password</span>=<span class="keyword">password</span>(<span class="string">'newpassword'</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">'root'</span></div></pre></td></tr></table></figure><h2 id="重启数据库-1"><a href="#重启数据库-1" class="headerlink" title="重启数据库"></a>重启数据库</h2><p>密码修改完成后，将<code>my.ini/my.cnf</code>文件中添加的<code>skip-grant-tables</code>语句注释或删除掉，然后重启数据库即可</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;停止数据库&quot;&gt;&lt;a href=&quot;#停止数据库&quot; class=&quot;headerlink&quot; title=&quot;停止数据库&quot;&gt;&lt;/a&gt;停止数据库&lt;/h2&gt;&lt;p&gt;WIndows下CMD执行&lt;code&gt;net stop mysql&lt;/code&gt;&lt;/p&gt;&lt;h2 id=&quot;修改my-cnf&quot;&gt;&lt;a href=&quot;#修改my-cnf&quot; class=&quot;headerlink&quot; title=&quot;修改my.cnf&quot;&gt;&lt;/a&gt;修改my.cnf&lt;/h2&gt;&lt;p&gt;利用文本编辑器打开mysql配置文件&lt;code&gt;my.ini/my.cnf&lt;/code&gt;,在mysqld进程配置文件中添加&lt;code&gt;skip-grant-tables&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://blog.alanice.cn/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL安装教程</title>
    <link href="http://blog.alanice.cn/2017/05/24/4d74d6f2-a0ce-4b59-ac0d-788d4a51561d/"/>
    <id>http://blog.alanice.cn/2017/05/24/4d74d6f2-a0ce-4b59-ac0d-788d4a51561d/</id>
    <published>2017-05-24T00:00:00.000Z</published>
    <updated>2017-05-24T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h2><p>进入mysql官网，登陆自己的oracle账号，下载Mysql-5.7.14，下载地址：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">MySQL</a></p><p>将下载好的文件解压到指定目录，笔者解压在<code>C:\software\Mysql\mysql-5.7.14-winx64</code></p><a id="more"></a><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><p>首先配置环境变量path，将<code>C:\software\Mysql\mysql-5.7.14-winx64\bin</code>配置到自己的path中。</p><p>在解压路径下复制<code>my-default.ini</code>,修改名称为<code>my.ini</code>。</p><p>打开文件<code>my.ini</code>,添加内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[mysqld]</div><div class="line">basedir=C:\\software\Mysql\mysql-5.7.14-winx64</div><div class="line">datadir=C:\\software\Mysql\mysql-5.7.14-winx64\data</div><div class="line">port=3306</div></pre></td></tr></table></figure><p>basedir:是上述mysql的解压路径</p><p>datadir：后续初始化等数据都会保存在该目录下，在该文件目录下新建data文件夹</p><p>port：表示连接数据库的端口号</p><h3 id="初始化数据库-配置相关信息"><a href="#初始化数据库-配置相关信息" class="headerlink" title="初始化数据库 配置相关信息"></a>初始化数据库 配置相关信息</h3><p>以管理员身份运行windows 命令行,进入mysql的解压缩目录</p><p><strong>提醒</strong>：此处需要进入bin目录，否则后续操作会出现错误。</p><p>执行进行初始化，运行命令：<code>mysqld --initialize --user=mysql --console</code></p><p>此时会生成root的初始密码，记住此时生成的初始化密码。</p><p>安装Mysql服务。运行命令：<code>mysqld --install MySQL</code></p><p>此时，可以起动mysql服务，运行命令：<code>net start mysql</code></p><p>用户可能会出现如下错误：1. 发生系统错误 2. 系统找不到指定文件。</p><p><strong>错误原因</strong>：如上所述，在运行安装服务命令:<code>mysqld --install MySQL</code>时，我们没有进入bin目录，进行安装。</p><p><strong>解决方案</strong>：进入bin目录，首先移除service，运行命令 ：<code>mysqld --remove</code>,重新安装mysql服务，运行命令：<code>mysqld --install</code></p><h3 id="登陆数据库"><a href="#登陆数据库" class="headerlink" title="登陆数据库"></a>登陆数据库</h3><p>命令行输入<code>mysql -u root -p</code>，</p><p><strong>错误描述</strong>：error 1045 （28000）</p><p><strong>解决方法</strong>：<br>在my.ini文件中在[mysqld]后一行加入<code>skip-grant-tables</code></p><p>此时，关闭mysql服务，再重新启动。重新登陆， 不需输入密码，直接enter。</p><p>输入<code>use mysql</code>选择mysql数据库,查询mysql数据库的user表：<code>select * from user</code></p><p>此时，我们发现密码字段的名称为authentication_string。有的可能会是password，根据你查询出来的结果为准。</p><p>对表user执行update操作：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">update</span> <span class="keyword">user</span> <span class="keyword">set</span> authentication_string = <span class="keyword">password</span>(<span class="string">"*******"</span>) <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">"root"</span></div></pre></td></tr></table></figure><p>操作成功。退出mysql,删除my.ini 文件中的skip-grant-tables ，重新启动mysql服务。</p><p>启动成功。至此，mysql在windows中安装成功。</p><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><p>进入数据库后输入use mysql 后，可能会报错，如下：<br>错误描述：ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.<br>解决方法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> = <span class="keyword">PASSWORD</span>(‘your <span class="keyword">new</span> <span class="keyword">password</span>‘);</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> ‘root‘@‘localhost‘ <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</div><div class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</div></pre></td></tr></table></figure><p>完成以上三步退出再登，使用新设置的密码就行了。</p><h3 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h3><p>创建用户和数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'username'</span>@<span class="string">'host'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'password'</span>;</div><div class="line"><span class="keyword">create</span> <span class="keyword">database</span> dbname <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> UTF8;</div></pre></td></tr></table></figure><p>username：你将创建的用户名</p><p>host：指定该用户在哪个主机上可以登陆。如果是本地用户可用localhost；如果想让该用户可以从任意远程主机登陆,可以使用通配符%。</p><p>password：该用户的登陆密码。密码可以为空，如果为空则该用户可以不需要密码登陆服务器。</p><p>dbname：数据库名称</p><h3 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">GRANT</span> <span class="keyword">privileges</span> <span class="keyword">ON</span> databasename.tablename <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'host'</span></div></pre></td></tr></table></figure><p>privileges：用户的操作权限，如SELECT , INSERT , UPDATE 等，如果要授予所的权限则使用ALL。</p><p>databasename：数据库名</p><p>tablename：表名</p><p>如果要授予该用户对所有数据库和表的相应操作权限则可用_表示, 如_.*。</p><p><strong>注意</strong>：用以上命令授权的用户不能给其它用户授权，如果想让该用户可以授权，用以下命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">GRANT</span> <span class="keyword">privileges</span> <span class="keyword">ON</span> databasename.tablename <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'host'</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</div></pre></td></tr></table></figure><p>设置与更改用户密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> <span class="string">'username'</span>@<span class="string">'host'</span> = <span class="keyword">PASSWORD</span>(<span class="string">'newpassword'</span>);</div></pre></td></tr></table></figure><p>如果是当前登陆用户用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">SET</span> <span class="keyword">PASSWORD</span> = <span class="keyword">PASSWORD</span>(<span class="string">"newpassword"</span>);</div></pre></td></tr></table></figure><p>刷新权限表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;下载软件&quot;&gt;&lt;a href=&quot;#下载软件&quot; class=&quot;headerlink&quot; title=&quot;下载软件&quot;&gt;&lt;/a&gt;下载软件&lt;/h2&gt;&lt;p&gt;进入mysql官网，登陆自己的oracle账号，下载Mysql-5.7.14，下载地址：&lt;a href=&quot;https://dev.mysql.com/downloads/mysql/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MySQL&lt;/a&gt;&lt;/p&gt;&lt;p&gt;将下载好的文件解压到指定目录，笔者解压在&lt;code&gt;C:\software\Mysql\mysql-5.7.14-winx64&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://blog.alanice.cn/categories/MySQL/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux基本命令介绍</title>
    <link href="http://blog.alanice.cn/2017/05/22/a82fd693-646d-4522-b327-cb161857b654/"/>
    <id>http://blog.alanice.cn/2017/05/22/a82fd693-646d-4522-b327-cb161857b654/</id>
    <published>2017-05-22T00:00:00.000Z</published>
    <updated>2017-05-22T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="永久修改主机名"><a href="#永久修改主机名" class="headerlink" title="永久修改主机名"></a>永久修改主机名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># hostnamectl set-hostname &lt;host-name&gt;</span></div></pre></td></tr></table></figure><a id="more"></a><h2 id="把用户加入sudoers"><a href="#把用户加入sudoers" class="headerlink" title="把用户加入sudoers"></a>把用户加入sudoers</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[Alan@localhost etc]$ ls -al /etc/sudoers</div><div class="line">-r--r----- 1 root root 3530 Apr 20 12:50 /etc/sudoers</div></pre></td></tr></table></figure><p>首先将sudoers的权限改为640</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost etc]<span class="comment"># chmod u+w sudoers</span></div></pre></td></tr></table></figure><p>然后编辑/etc/sudoers文件，找到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">root ALL=(ALL) ALL</div></pre></td></tr></table></figure><p>然后在该行下面加一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Alan ALL=(ALL) ALL</div></pre></td></tr></table></figure><p>Alan为要加入sudoers的用户</p><p>修改完之后，保存退出，然后再将sudoers的权限该回去，不然的话，Alan第一次使用sudo命令时会提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">sudo: /etc/sudoers is mode 0640, should be 0440</div><div class="line">sudo: no valid sudoers sources found, quitting”</div><div class="line">[root@localhost etc]<span class="comment"># chmod u-w sudoers</span></div></pre></td></tr></table></figure><p>之后Alan就可以很好的使用sudo命令了。</p><h2 id="usermod-命令详解"><a href="#usermod-命令详解" class="headerlink" title="usermod 命令详解"></a>usermod 命令详解</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">usermod [options] user_name</div></pre></td></tr></table></figure><p><code>usermod</code>命令修改系统帐户文件来反映通过命令行指定的变化</p><ul><li>选项(options)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">-a|--append  ##把用户追加到某些组中，仅与-G选项一起使用 </div><div class="line">-c|--comment ##修改/etc/passwd文件第五段comment </div><div class="line">-d|--home    ##修改用户的家目录通常和-m选项一起使用 </div><div class="line">-e|--expiredate  ##指定用户帐号禁用的日期，格式YY-MM-DD </div><div class="line">-f|--inactive    ##用户密码过期多少天后采用就禁用该帐号，0表示密码已过期就禁用帐号，-1表示禁用此功能，默认值是-1 </div><div class="line">-g|--gid     ##修改用户的gid，改组一定存在</div><div class="line">-G|--groups  ##把用户追加到某些组中，仅与-a选项一起使用 </div><div class="line">-l|--login   ##修改用户的登录名称 </div><div class="line">-L|--lock    ##锁定用户的密码 </div><div class="line">-m|--move-home   ##修改用户的家目录通常和-d选项一起使用 </div><div class="line">-s|--shell   ##修改用户的shell </div><div class="line">-u|--uid     ##修改用户的uid，该uid必须唯一 </div><div class="line">-U|--unlock  ##解锁用户的密码</div></pre></td></tr></table></figure><ul><li>示例(Examples):<br>1.新建用户test，密码test,另外添加usertest组</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># useradd test </span></div><div class="line"><span class="comment"># echo "test" | passwd --stdin test </span></div><div class="line"><span class="comment"># groupadd usertest</span></div></pre></td></tr></table></figure><p>2.把test用户加入usertest组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># usermod -aG usertest test ##多个组之间用空格隔开 </span></div><div class="line"><span class="comment"># id test </span></div><div class="line">uid=500(<span class="built_in">test</span>) gid=500(<span class="built_in">test</span>) groups=500(<span class="built_in">test</span>),501(usertest)</div></pre></td></tr></table></figure><p>3.修改test用户的Home目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># usermod -md /home/usertest </span></div><div class="line"><span class="comment"># ls /home </span></div><div class="line">usertest</div></pre></td></tr></table></figure><p>4.修改用户名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># usermod -l urchin(新用户名称)  test(原来用户名称) </span></div><div class="line"><span class="comment"># id urchin </span></div><div class="line">uid=500(urchin) gid=500(<span class="built_in">test</span>) groups=500(<span class="built_in">test</span>),501(usertest)</div></pre></td></tr></table></figure><p>5.修改用户的shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># sed '$!d' /etc/passwd </span></div><div class="line">urchin:x:500:500::/home/usertest:/bin/bash </div><div class="line"><span class="comment"># usermod -s /bin/sh urchin </span></div><div class="line"><span class="comment"># sed -n '$p' /etc/passwd </span></div><div class="line">urchin:x:500:500::/home/usertest:/bin/sh</div></pre></td></tr></table></figure><p>6.修改用户的UID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># usermod -u 578 urchin (UID必须唯一) </span></div><div class="line"><span class="comment"># id urchin </span></div><div class="line">uid=578(urchin) gid=500(<span class="built_in">test</span>) groups=500(<span class="built_in">test</span>),501(usertest)</div></pre></td></tr></table></figure><p>7.修改用户的GID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#groupadd -g 578 test1 </span></div><div class="line"><span class="comment">#usermod -g 578 urchin (578组一定要存在) </span></div><div class="line"><span class="comment">#id urchin </span></div><div class="line">uid=578(urchin) gid=578(test1) groups=578(test1),501(usertest)</div></pre></td></tr></table></figure><p><strong>注意(caution)</strong>：usermod不允许你改变正在线上的使用者帐号名称。当usermod用来改变userID,必须确认这名user没在电脑上执行任何程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">/etc/passwd</div><div class="line">user_name:x:uid:gid:commnet:home:shell</div><div class="line">/etc/shadow</div><div class="line">username:passwd:lastchg:min:max:warn:inactive:expire:flag</div><div class="line">–用户名</div><div class="line">–密码</div><div class="line">–从1970年1月1日起到上次修改密码所经过的天数</div><div class="line">–密码再过几天可以被变更(0表示随时可以改变)</div><div class="line">–密码再过几天必须被变更(99999表示永不过期)</div><div class="line">–密码过期前几天提醒用户(默认为一周)</div><div class="line">–密码过期几天后帐号被禁用</div><div class="line">–从1970年1月1日算起，多少天后账号失效</div></pre></td></tr></table></figure><h2 id="查看当前主机的IP和DNS"><a href="#查看当前主机的IP和DNS" class="headerlink" title="查看当前主机的IP和DNS"></a>查看当前主机的IP和DNS</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nmcli dev show</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;永久修改主机名&quot;&gt;&lt;a href=&quot;#永久修改主机名&quot; class=&quot;headerlink&quot; title=&quot;永久修改主机名&quot;&gt;&lt;/a&gt;永久修改主机名&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# hostnamectl set-hostname &amp;lt;host-name&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.alanice.cn/categories/Linux/"/>
    
    
  </entry>
  
</feed>
